apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: kafkas.kafka.strimzi.io
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
spec:
  group: kafka.strimzi.io
  names:
    kind: Kafka
    listKind: KafkaList
    singular: kafka
    plural: kafkas
    shortNames:
    - k
    categories:
    - strimzi
  scope: Namespaced
  conversion:
    strategy: None
  versions:
  - name: v1beta2
    served: true
    storage: true
    subresources:
      status: {}
    additionalPrinterColumns:
    - name: Ready
      description: The state of the custom resource
      jsonPath: ".status.conditions[?(@.type==\"Ready\")].status"
      type: string
    - name: Metadata State
      description: The state of the cluster metadata
      jsonPath: .status.kafkaMetadataState
      type: string
    - name: Warnings
      description: Warnings related to the custom resource
      jsonPath: ".status.conditions[?(@.type==\"Warning\")].status"
      type: string
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
            description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          kind:
            type: string
            description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          metadata:
            type: object
          spec:
            type: object
            properties:
              kafka:
                type: object
                properties:
                  version:
                    type: string
                    description: "The Kafka broker version. Defaults to the latest version. Consult the user documentation to understand the process required to upgrade or downgrade the version."
                  metadataVersion:
                    type: string
                    description: "The KRaft metadata version used by the Kafka cluster. This property is ignored when running in ZooKeeper mode. If the property is not set, it defaults to the metadata version that corresponds to the `version` property."
                  replicas:
                    type: integer
                    minimum: 1
                    description: "Replicas are now configured in `KafkaNodePool` resources and this option is ignored."
                  image:
                    type: string
                    description: "The container image used for Kafka pods. If the property is not set, the default Kafka image version is determined based on the `version` configuration. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration. Changing the Kafka image version does not automatically update the image versions for other components, such as Kafka Exporter. "
                  listeners:
                    type: array
                    minItems: 1
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          pattern: "^[a-z0-9]{1,11}$"
                          description: "Name of the listener. The name will be used to identify the listener and the related Kubernetes objects. The name has to be unique within given a Kafka cluster. The name can consist of lowercase characters and numbers and be up to 11 characters long."
                        port:
                          type: integer
                          minimum: 9092
                          description: "Port number used by the listener inside Kafka. The port number has to be unique within a given Kafka cluster. Allowed port numbers are 9092 and higher with the exception of ports 9404 and 9999, which are already used for Prometheus and JMX. Depending on the listener type, the port number might not be the same as the port number that connects Kafka clients."
                        type:
                          type: string
                          enum:
                          - internal
                          - route
                          - loadbalancer
                          - nodeport
                          - ingress
                          - cluster-ip
                          description: "Type of the listener. The supported types are as follows: \n\n* `internal` type exposes Kafka internally only within the Kubernetes cluster.\n* `route` type uses OpenShift Routes to expose Kafka.\n* `loadbalancer` type uses LoadBalancer type services to expose Kafka.\n* `nodeport` type uses NodePort type services to expose Kafka.\n* `ingress` type uses Kubernetes Nginx Ingress to expose Kafka with TLS passthrough.\n* `cluster-ip` type uses a per-broker `ClusterIP` service.\n"
                        tls:
                          type: boolean
                          description: "Enables TLS encryption on the listener. This is a required property. For `route` and `ingress` type listeners, TLS encryption must be always enabled."
                        authentication:
                          type: object
                          properties:
                            accessTokenIsJwt:
                              type: boolean
                              description: "Configure whether the access token is treated as JWT. This must be set to `false` if the authorization server returns opaque tokens. Defaults to `true`."
                            checkAccessTokenType:
                              type: boolean
                              description: "Configure whether the access token type check is performed or not. This should be set to `false` if the authorization server does not include 'typ' claim in JWT token. Defaults to `true`."
                            checkAudience:
                              type: boolean
                              description: "Enable or disable audience checking. Audience checks identify the recipients of tokens. If audience checking is enabled, the OAuth Client ID also has to be configured using the `clientId` property. The Kafka broker will reject tokens that do not have its `clientId` in their `aud` (audience) claim.Default value is `false`."
                            checkIssuer:
                              type: boolean
                              description: "Enable or disable issuer checking. By default issuer is checked using the value configured by `validIssuerUri`. Default value is `true`."
                            clientAudience:
                              type: string
                              description: "The audience to use when making requests to the authorization server's token endpoint. Used for inter-broker authentication and for configuring OAuth 2.0 over PLAIN using the `clientId` and `secret` method."
                            clientId:
                              type: string
                              description: "OAuth Client ID which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI."
                            clientScope:
                              type: string
                              description: "The scope to use when making requests to the authorization server's token endpoint. Used for inter-broker authentication and for configuring OAuth 2.0 over PLAIN using the `clientId` and `secret` method."
                            clientSecret:
                              type: object
                              properties:
                                key:
                                  type: string
                                  description: "The key under which the secret value is stored in the Kubernetes Secret."
                                secretName:
                                  type: string
                                  description: "The name of the Kubernetes Secret containing the secret value."
                              required:
                              - key
                              - secretName
                              description: "Link to Kubernetes Secret containing the OAuth client secret which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI."
                            connectTimeoutSeconds:
                              type: integer
                              description: "The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds."
                            customClaimCheck:
                              type: string
                              description: "JsonPath filter query to be applied to the JWT token or to the response of the introspection endpoint for additional token validation. Not set by default."
                            disableTlsHostnameVerification:
                              type: boolean
                              description: "Enable or disable TLS hostname verification. Default value is `false`."
                            enableECDSA:
                              type: boolean
                              description: "Enable or disable ECDSA support by installing BouncyCastle crypto provider. ECDSA support is always enabled. The BouncyCastle libraries are no longer packaged with Strimzi. Value is ignored."
                            enableMetrics:
                              type: boolean
                              description: "Enable or disable OAuth metrics. Default value is `false`."
                            enableOauthBearer:
                              type: boolean
                              description: "Enable or disable OAuth authentication over SASL_OAUTHBEARER. Default value is `true`."
                            enablePlain:
                              type: boolean
                              description: "Enable or disable OAuth authentication over SASL_PLAIN. There is no re-authentication support when this mechanism is used. Default value is `false`."
                            failFast:
                              type: boolean
                              description: "Enable or disable termination of Kafka broker processes due to potentially recoverable runtime errors during startup. Default value is `true`."
                            fallbackUserNameClaim:
                              type: string
                              description: "The fallback username claim to be used for the user ID if the claim specified by `userNameClaim` is not present. This is useful when `client_credentials` authentication only results in the client ID being provided in another claim. It only takes effect if `userNameClaim` is set."
                            fallbackUserNamePrefix:
                              type: string
                              description: "The prefix to use with the value of `fallbackUserNameClaim` to construct the user id. This only takes effect if `fallbackUserNameClaim` is true, and the value is present for the claim. Mapping usernames and client ids into the same user id space is useful in preventing name collisions."
                            groupsClaim:
                              type: string
                              description: "JsonPath query used to extract groups for the user during authentication. Extracted groups can be used by a custom authorizer. By default no groups are extracted."
                            groupsClaimDelimiter:
                              type: string
                              description: "A delimiter used to parse groups when they are extracted as a single String value rather than a JSON array. Default value is ',' (comma)."
                            httpRetries:
                              type: integer
                              description: "The maximum number of retries to attempt if an initial HTTP request fails. If not set, the default is to not attempt any retries."
                            httpRetryPauseMs:
                              type: integer
                              description: "The pause to take before retrying a failed HTTP request. If not set, the default is to not pause at all but to immediately repeat a request."
                            includeAcceptHeader:
                              type: boolean
                              description: "Whether the Accept header should be set in requests to the authorization servers. The default value is `true`."
                            introspectionEndpointUri:
                              type: string
                              description: "URI of the token introspection endpoint which can be used to validate opaque non-JWT tokens."
                            jwksEndpointUri:
                              type: string
                              description: "URI of the JWKS certificate endpoint, which can be used for local JWT validation."
                            jwksExpirySeconds:
                              type: integer
                              minimum: 1
                              description: "Configures how often are the JWKS certificates considered valid. The expiry interval has to be at least 60 seconds longer then the refresh interval specified in `jwksRefreshSeconds`. Defaults to 360 seconds."
                            jwksIgnoreKeyUse:
                              type: boolean
                              description: "Flag to ignore the 'use' attribute of `key` declarations in a JWKS endpoint response. Default value is `false`."
                            jwksMinRefreshPauseSeconds:
                              type: integer
                              minimum: 0
                              description: "The minimum pause between two consecutive refreshes. When an unknown signing key is encountered the refresh is scheduled immediately, but will always wait for this minimum pause. Defaults to 1 second."
                            jwksRefreshSeconds:
                              type: integer
                              minimum: 1
                              description: "Configures how often are the JWKS certificates refreshed. The refresh interval has to be at least 60 seconds shorter then the expiry interval specified in `jwksExpirySeconds`. Defaults to 300 seconds."
                            listenerConfig:
                              x-kubernetes-preserve-unknown-fields: true
                              type: object
                              description: "Configuration to be used for a specific listener. All values are prefixed with `listener.name.<listener_name>`."
                            maxSecondsWithoutReauthentication:
                              type: integer
                              description: "Maximum number of seconds the authenticated session remains valid without re-authentication. This enables Apache Kafka re-authentication feature, and causes sessions to expire when the access token expires. If the access token expires before max time or if max time is reached, the client has to re-authenticate, otherwise the server will drop the connection. Not set by default - the authenticated session does not expire when the access token expires. This option only applies to SASL_OAUTHBEARER authentication mechanism (when `enableOauthBearer` is `true`)."
                            readTimeoutSeconds:
                              type: integer
                              description: "The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds."
                            sasl:
                              type: boolean
                              description: "Enable or disable SASL on this listener."
                            secrets:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    type: string
                                    description: "The key under which the secret value is stored in the Kubernetes Secret."
                                  secretName:
                                    type: string
                                    description: "The name of the Kubernetes Secret containing the secret value."
                                required:
                                - key
                                - secretName
                              description: "Secrets to be mounted to `/opt/kafka/custom-authn-secrets/custom-listener-<listener_name>-<port>/<secret_name>`."
                            serverBearerTokenLocation:
                              type: string
                              description: "Path to the file on the local filesystem that contains a bearer token to be used instead of client ID and secret when authenticating to authorization server."
                            tlsTrustedCertificates:
                              type: array
                              items:
                                type: object
                                properties:
                                  secretName:
                                    type: string
                                    description: "The name of the Secret containing the certificate."
                                  certificate:
                                    type: string
                                    description: "The name of the file certificate in the secret."
                                  pattern:
                                    type: string
                                    description: "Pattern for the certificate files in the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)[_glob syntax_] for the pattern. All files in the secret that match the pattern are used."
                                oneOf:
                                - properties:
                                    certificate: {}
                                  required:
                                  - certificate
                                - properties:
                                    pattern: {}
                                  required:
                                  - pattern
                                required:
                                - secretName
                              description: "Trusted certificates for TLS connection to the OAuth server."
                            tokenEndpointUri:
                              type: string
                              description: "URI of the Token Endpoint to use with SASL_PLAIN mechanism when the client authenticates with `clientId` and a `secret`. If set, the client can authenticate over SASL_PLAIN by either setting `username` to `clientId`, and setting `password` to client `secret`, or by setting `username` to account username, and `password` to access token prefixed with `$accessToken:`. If this option is not set, the `password` is always interpreted as an access token (without a prefix), and `username` as the account username (a so-called 'no-client-credentials' mode)."
                            type:
                              type: string
                              enum:
                              - tls
                              - scram-sha-512
                              - oauth
                              - custom
                              description: "Authentication type. `oauth` type uses SASL OAUTHBEARER Authentication. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `tls` type uses TLS Client Authentication. `tls` type is supported only on TLS listeners.`custom` type allows for any authentication type to be used."
                            userInfoEndpointUri:
                              type: string
                              description: "URI of the User Info Endpoint to use as a fallback to obtaining the user id when the Introspection Endpoint does not return information that can be used for the user id. "
                            userNameClaim:
                              type: string
                              description: "Name of the claim from the JWT authentication token, Introspection Endpoint response or User Info Endpoint response which will be used to extract the user id. Defaults to `sub`."
                            userNamePrefix:
                              type: string
                              description: "The prefix to use with the value of `userNameClaim` to construct the user ID. This only takes effect if `userNameClaim` is specified and the value is present for the claim. When used in combination with `fallbackUserNameClaims`, it ensures consistent mapping of usernames and client IDs into the same user ID space and prevents name collisions."
                            validIssuerUri:
                              type: string
                              description: "URI of the token issuer used for authentication."
                            validTokenType:
                              type: string
                              description: "Valid value for the `token_type` attribute returned by the Introspection Endpoint. No default value, and not checked by default."
                          required:
                          - type
                          description: "Authentication configuration for this listener."
                        configuration:
                          type: object
                          properties:
                            brokerCertChainAndKey:
                              type: object
                              properties:
                                secretName:
                                  type: string
                                  description: "The name of the Secret containing the certificate."
                                certificate:
                                  type: string
                                  description: "The name of the file certificate in the Secret."
                                key:
                                  type: string
                                  description: "The name of the private key in the Secret."
                              required:
                              - secretName
                              - certificate
                              - key
                              description: "Reference to the `Secret` which holds the certificate and private key pair which will be used for this listener. The certificate can optionally contain the whole chain. This field can be used only with listeners with enabled TLS encryption."
                            class:
                              type: string
                              description: "Configures a specific class for `Ingress` and `LoadBalancer` that defines which controller is used. If not specified, the default controller is used.\n\n* For an `ingress` listener, the operator uses this property to set the `ingressClassName` property in the `Ingress` resources.\n* For a `loadbalancer` listener, the operator uses this property to set the `loadBalancerClass` property  in the `Service` resources.\n\nFor `ingress` and `loadbalancer` listeners only."
                            externalTrafficPolicy:
                              type: string
                              enum:
                              - Local
                              - Cluster
                              description: "Specifies whether the service routes external traffic to cluster-wide or node-local endpoints:\n\n* `Cluster` may cause a second hop to another node and obscures the client source IP.\n* `Local` avoids a second hop for `LoadBalancer` and `Nodeport` type services and preserves the client source IP (when supported by the infrastructure).\n\nIf unspecified, Kubernetes uses `Cluster` as the default. For `loadbalancer` or `nodeport` listeners only."
                            loadBalancerSourceRanges:
                              type: array
                              items:
                                type: string
                              description: "A list of CIDR ranges (for example `10.0.0.0/8` or `130.211.204.1/32`) from which clients can connect to loadbalancer listeners. If supported by the platform, traffic through the loadbalancer is restricted to the specified CIDR ranges. This field is applicable only for loadbalancer type services and is ignored if the cloud provider does not support the feature. For `loadbalancer` listeners only."
                            bootstrap:
                              type: object
                              properties:
                                alternativeNames:
                                  type: array
                                  items:
                                    type: string
                                  description: "Additional alternative names for the bootstrap service. The alternative names will be added to the list of subject alternative names of the TLS certificates."
                                host:
                                  type: string
                                  description: "Specifies the hostname used for the bootstrap resource. For `route` (optional) or `ingress` (required) listeners only. Ensure the hostname resolves to the Ingress endpoints; no validation is performed by Strimzi."
                                nodePort:
                                  type: integer
                                  description: "Node port for the bootstrap service. For `nodeport` listeners only."
                                loadBalancerIP:
                                  type: string
                                  description: "The loadbalancer is requested with the IP address specified in this property. This feature depends on whether the underlying cloud provider supports specifying the `loadBalancerIP` when a load balancer is created. This property is ignored if the cloud provider does not support the feature. For `loadbalancer` listeners only."
                                annotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                  description: "Annotations added to `Ingress`, `Route`, or `Service` resources. You can use this property to configure DNS providers such as External DNS. For `loadbalancer`, `nodeport`, `route`, or `ingress` listeners only."
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                  description: "Labels added to `Ingress`, `Route`, or `Service` resources. For `loadbalancer`, `nodeport`, `route`, or `ingress` listeners only."
                                externalIPs:
                                  type: array
                                  items:
                                    type: string
                                  description: "External IPs associated to the nodeport service. These IPs are used by clients external to the Kubernetes cluster to access the Kafka brokers. This property is helpful when `nodeport` without `externalIP` is not sufficient. For example on bare-metal Kubernetes clusters that do not support Loadbalancer service types. For `nodeport` listeners only."
                              description: "Bootstrap configuration."
                            brokers:
                              type: array
                              items:
                                type: object
                                properties:
                                  broker:
                                    type: integer
                                    description: "ID of the kafka broker (broker identifier). Broker IDs start from 0 and correspond to the number of broker replicas."
                                  advertisedHost:
                                    type: string
                                    description: "The host name used in the brokers' `advertised.listeners`."
                                  advertisedPort:
                                    type: integer
                                    description: "The port number used in the brokers' `advertised.listeners`."
                                  host:
                                    type: string
                                    description: "The broker host. This field will be used in the Ingress resource or in the Route resource to specify the desired hostname. This field can be used only with `route` (optional) or `ingress` (required) type listeners."
                                  nodePort:
                                    type: integer
                                    description: "Node port for the per-broker service. This field can be used only with `nodeport` type listener."
                                  loadBalancerIP:
                                    type: string
                                    description: "The loadbalancer is requested with the IP address specified in this field. This feature depends on whether the underlying cloud provider supports specifying the `loadBalancerIP` when a load balancer is created. This field is ignored if the cloud provider does not support the feature.This field can be used only with `loadbalancer` type listener."
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    type: object
                                    description: "Annotations that will be added to the `Ingress` or `Service` resource. You can use this field to configure DNS providers such as External DNS. This field can be used only with `loadbalancer`, `nodeport`, or `ingress` type listeners."
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                    description: "Labels that will be added to the `Ingress`, `Route`, or `Service` resource. This field can be used only with `loadbalancer`, `nodeport`, `route`, or `ingress` type listeners."
                                  externalIPs:
                                    type: array
                                    items:
                                      type: string
                                    description: "External IPs associated to the nodeport service. These IPs are used by clients external to the Kubernetes cluster to access the Kafka brokers. This property is helpful when `nodeport` without `externalIP` is not sufficient. For example on bare-metal Kubernetes clusters that do not support Loadbalancer service types. This field can only be used with `nodeport` type listener."
                                required:
                                - broker
                              description: "Per-broker configurations."
                            ipFamilyPolicy:
                              type: string
                              enum:
                              - SingleStack
                              - PreferDualStack
                              - RequireDualStack
                              description: "Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`:\n\n* `SingleStack` is for a single IP family.\n* `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters.\n* `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters.\n\nIf unspecified, Kubernetes will choose the default value based on the service type."
                            ipFamilies:
                              type: array
                              items:
                                type: string
                                enum:
                                - IPv4
                                - IPv6
                              description: "Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting."
                            createBootstrapService:
                              type: boolean
                              description: "Whether to create the bootstrap service or not. The bootstrap service is created by default (if not specified differently). This field can be used with the `loadbalancer` listener."
                            finalizers:
                              type: array
                              items:
                                type: string
                              description: "A list of finalizers configured for the `LoadBalancer` type services created for this listener. If supported by the platform, the finalizer `service.kubernetes.io/load-balancer-cleanup` to make sure that the external load balancer is deleted together with the service.For more information, see https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#garbage-collecting-load-balancers. For `loadbalancer` listeners only."
                            useServiceDnsDomain:
                              type: boolean
                              description: "Configures whether the Kubernetes service DNS domain should be included in the generated addresses.\n\n* If set to `false`, the generated addresses do not contain the service DNS domain suffix. For example, `my-cluster-kafka-0.my-cluster-kafka-brokers.myproject.svc`.\n* If set to `true`, the generated addresses contain the service DNS domain suffix. For example, `my-cluster-kafka-0.my-cluster-kafka-brokers.myproject.svc.cluster.local`.\n\nThe default is `.cluster.local`, but this is customizable using the environment variable `KUBERNETES_SERVICE_DNS_DOMAIN`. For `internal` and `cluster-ip` listeners only."
                            maxConnections:
                              type: integer
                              description: "The maximum number of connections we allow for this listener in the broker at any time. New connections are blocked if the limit is reached."
                            maxConnectionCreationRate:
                              type: integer
                              description: "The maximum connection creation rate we allow in this listener at any time. New connections will be throttled if the limit is reached."
                            preferredNodePortAddressType:
                              type: string
                              enum:
                              - ExternalIP
                              - ExternalDNS
                              - InternalIP
                              - InternalDNS
                              - Hostname
                              description: "Defines which address type should be used as the node address. Available types are: `ExternalDNS`, `ExternalIP`, `InternalDNS`, `InternalIP` and `Hostname`. By default, the addresses are used in the following order (the first one found is used):\n\n* `ExternalDNS`\n* `ExternalIP`\n* `InternalDNS`\n* `InternalIP`\n* `Hostname`\n\nThis property is used to select the preferred address type, which is checked first. If no address is found for this address type, the other types are checked in the default order.For `nodeport` listeners only."
                            publishNotReadyAddresses:
                              type: boolean
                              description: "Configures whether the service endpoints are considered \"ready\" even if the Pods themselves are not. Defaults to `false`. This field can not be used with `internal` listeners."
                            hostTemplate:
                              type: string
                              description: "Configures the template for generating the hostnames of the individual brokers. Valid placeholders that you can use in the template are `{nodeId}` and `{nodePodName}`."
                            advertisedHostTemplate:
                              type: string
                              description: "Configures the template for generating the advertised hostnames of the individual brokers. Valid placeholders that you can use in the template are `{nodeId}` and `{nodePodName}`."
                            allocateLoadBalancerNodePorts:
                              type: boolean
                              description: "Configures whether to allocate NodePort automatically for the `Service` with type `LoadBalancer`. This is a one to one with the `spec.allocateLoadBalancerNodePorts` configuration in the `Service` type For `loadbalancer` listeners only."
                          description: "Additional listener configuration."
                        networkPolicyPeers:
                          type: array
                          items:
                            type: object
                            properties:
                              ipBlock:
                                type: object
                                properties:
                                  cidr:
                                    type: string
                                  except:
                                    type: array
                                    items:
                                      type: string
                              namespaceSelector:
                                type: object
                                properties:
                                  matchExpressions:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          type: array
                                          items:
                                            type: string
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    type: object
                              podSelector:
                                type: object
                                properties:
                                  matchExpressions:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          type: array
                                          items:
                                            type: string
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    type: object
                          description: "List of peers which should be able to connect to this listener. Peers in this list are combined using a logical OR operation. If this field is empty or missing, all connections will be allowed for this listener. If this field is present and contains at least one item, the listener only allows the traffic which matches at least one item in this list."
                      required:
                      - name
                      - port
                      - type
                      - tls
                    description: "Configures listeners to provide access to Kafka brokers."
                  config:
                    x-kubernetes-preserve-unknown-fields: true
                    type: object
                    description: "Kafka broker config properties with the following prefixes cannot be set: listeners, advertised., broker., listener., host.name, port, inter.broker.listener.name, sasl., ssl., security., password., log.dir, zookeeper.connect, zookeeper.set.acl, zookeeper.ssl, zookeeper.clientCnxnSocket, authorizer., super.user, cruise.control.metrics.topic, cruise.control.metrics.reporter.bootstrap.servers, node.id, process.roles, controller., metadata.log.dir, zookeeper.metadata.migration.enable, client.quota.callback.static.kafka.admin., client.quota.callback.static.produce, client.quota.callback.static.fetch, client.quota.callback.static.storage.per.volume.limit.min.available., client.quota.callback.static.excluded.principal.name.list, prometheus.metrics.reporter. (with the exception of: zookeeper.connection.timeout.ms, sasl.server.max.receive.size, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, ssl.secure.random.implementation, cruise.control.metrics.topic.num.partitions, cruise.control.metrics.topic.replication.factor, cruise.control.metrics.topic.retention.ms, cruise.control.metrics.topic.auto.create.retries, cruise.control.metrics.topic.auto.create.timeout.ms, cruise.control.metrics.topic.min.insync.replicas, controller.quorum.election.backoff.max.ms, controller.quorum.election.timeout.ms, controller.quorum.fetch.timeout.ms)."
                  storage:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                        - ephemeral
                        - persistent-claim
                        - jbod
                        description: "Storage type, must be either 'ephemeral', 'persistent-claim', or 'jbod'."
                      volumes:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              minimum: 0
                              description: "Storage identification number. Mandatory for storage volumes defined with a `jbod` storage type configuration."
                    description: "Storage is now configured in the `KafkaNodePool` resources and this option is ignored."
                required:
                - listeners
                description: "Configuration of the Kafka cluster."
              zookeeper:
                type: object
                description: "As of Strimzi 0.46.0, ZooKeeper-based Apache Kafka clusters are not supported anymore and this option is ignored."
              entityOperator:
                type: object
                description: "Configuration of the Entity Operator."
              clusterCa:
                type: object
                description: "Configuration of the cluster certificate authority."
              clientsCa:
                type: object
                description: "Configuration of the clients certificate authority."
              cruiseControl:
                type: object
                description: "Configuration for Cruise Control deployment. Deploys a Cruise Control instance when specified."
              jmxTrans:
                type: object
                description: "As of Strimzi 0.35.0, JMXTrans is not supported anymore and this option is ignored."
              kafkaExporter:
                type: object
                description: "Configuration of the Kafka Exporter. Kafka Exporter can provide additional metrics, for example lag of consumer group at topic/partition."
              maintenanceTimeWindows:
                type: array
                items:
                  type: string
                description: "A list of time windows for maintenance tasks (that is, certificates renewal). Each time window is defined by a cron expression."
            required:
            - kafka
            description: "The specification of the Kafka cluster."
          status:
            type: object
            description: "The status of the Kafka cluster."
