apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: kafkas.kafka.strimzi.io
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
spec:
  group: kafka.strimzi.io
  names:
    kind: Kafka
    listKind: KafkaList
    singular: kafka
    plural: kafkas
    shortNames:
    - k
    categories:
    - strimzi
  scope: Namespaced
  conversion:
    strategy: None
  versions:
  - name: v1beta2
    served: true
    storage: true
    subresources:
      status: {}
    additionalPrinterColumns:
    - name: Ready
      description: The state of the custom resource
      jsonPath: ".status.conditions[?(@.type==\"Ready\")].status"
      type: string
    - name: Metadata State
      description: The state of the cluster metadata
      jsonPath: .status.kafkaMetadataState
      type: string
    - name: Warnings
      description: Warnings related to the custom resource
      jsonPath: ".status.conditions[?(@.type==\"Warning\")].status"
      type: string
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
            description: "APIVersion defines the versioned schema of this repres
entation of an object. Servers should convert recognized schemas to the latest i
nternal value, and may reject unrecognized values. More info: https://git.k8s.io
/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          kind:
            type: string
            description: "Kind is a string value representing the REST resource
this object represents. Servers may infer this from the endpoint the client subm
its requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/
community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          metadata:
            type: object
          spec:
            type: object
            properties:
              kafka:
                type: object
                properties:
                  version:
                    type: string
                    description: The Kafka broker version. Defaults to the lates
t version. Consult the user documentation to understand the process required to
upgrade or downgrade the version.
                  metadataVersion:
                    type: string
                    description: "The KRaft metadata version used by the Kafka c
luster. This property is ignored when running in ZooKeeper mode. If the property
 is not set, it defaults to the metadata version that corresponds to the `versio
n` property."
                  replicas:
                    type: integer
                    minimum: 1
                    description: Replicas are now configured in `KafkaNodePool`
resources and this option is ignored.
                  image:
                    type: string
                    description: "The container image used for Kafka pods. If th
e property is not set, the default Kafka image version is determined based on th
e `version` configuration. The image names are specifically mapped to correspond
ing versions in the Cluster Operator configuration. Changing the Kafka image ver
sion does not automatically update the image versions for other components, such
 as Kafka Exporter. "
                  listeners:
                    type: array
                    minItems: 1
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          pattern: "^[a-z0-9]{1,11}$"
                          description: Name of the listener. The name will be us
ed to identify the listener and the related Kubernetes objects. The name has to
be unique within given a Kafka cluster. The name can consist of lowercase charac
ters and numbers and be up to 11 characters long.
                        port:
                          type: integer
                          minimum: 9092
                          description: "Port number used by the listener inside
Kafka. The port number has to be unique within a given Kafka cluster. Allowed po
rt numbers are 9092 and higher with the exception of ports 9404 and 9999, which
are already used for Prometheus and JMX. Depending on the listener type, the por
t number might not be the same as the port number that connects Kafka clients."
                        type:
                          type: string
                          enum:
                          - internal
                          - route
                          - loadbalancer
                          - nodeport
                          - ingress
                          - cluster-ip
                          description: "Type of the listener. The supported type
s are as follows: \n\n* `internal` type exposes Kafka internally only within the
 Kubernetes cluster.\n* `route` type uses OpenShift Routes to expose Kafka.\n* `
loadbalancer` type uses LoadBalancer type services to expose Kafka.\n* `nodeport
` type uses NodePort type services to expose Kafka.\n* `ingress` type uses Kuber
netes Nginx Ingress to expose Kafka with TLS passthrough.\n* `cluster-ip` type u
ses a per-broker `ClusterIP` service.\n"
                        tls:
                          type: boolean
                          description: "Enables TLS encryption on the listener.
This is a required property. For `route` and `ingress` type listeners, TLS encry
ption must be always enabled."
                        authentication:
                          type: object
                          properties:
                            accessTokenIsJwt:
                              type: boolean
                              description: Configure whether the access token is
 treated as JWT. This must be set to `false` if the authorization server returns
 opaque tokens. Defaults to `true`.
                            checkAccessTokenType:
                              type: boolean
                              description: Configure whether the access token ty
pe check is performed or not. This should be set to `false` if the authorization
 server does not include 'typ' claim in JWT token. Defaults to `true`.
                            checkAudience:
                              type: boolean
                              description: "Enable or disable audience checking.
 Audience checks identify the recipients of tokens. If audience checking is enab
led, the OAuth Client ID also has to be configured using the `clientId` property
. The Kafka broker will reject tokens that do not have its `clientId` in their `
aud` (audience) claim.Default value is `false`."
                            checkIssuer:
                              type: boolean
                              description: Enable or disable issuer checking. By
 default issuer is checked using the value configured by `validIssuerUri`. Defau
lt value is `true`.
                            clientAudience:
                              type: string
                              description: The audience to use when making reque
sts to the authorization server's token endpoint. Used for inter-broker authenti
cation and for configuring OAuth 2.0 over PLAIN using the `clientId` and `secret
` method.
                            clientId:
                              type: string
                              description: OAuth Client ID which the Kafka broke
r can use to authenticate against the authorization server and use the introspec
t endpoint URI.
                            clientScope:
                              type: string
                              description: The scope to use when making requests
 to the authorization server's token endpoint. Used for inter-broker authenticat
ion and for configuring OAuth 2.0 over PLAIN using the `clientId` and `secret` m
ethod.
                            clientSecret:
                              type: object
                              properties:
                                key:
                                  type: string
                                  description: The key under which the secret va
lue is stored in the Kubernetes Secret.
                                secretName:
                                  type: string
                                  description: The name of the Kubernetes Secret
 containing the secret value.
                              required:
                              - key
                              - secretName
                              description: Link to Kubernetes Secret containing
the OAuth client secret which the Kafka broker can use to authenticate against t
he authorization server and use the introspect endpoint URI.
                            connectTimeoutSeconds:
                              type: integer
                              description: "The connect timeout in seconds when
connecting to authorization server. If not set, the effective connect timeout is
 60 seconds."
                            customClaimCheck:
                              type: string
                              description: JsonPath filter query to be applied t
o the JWT token or to the response of the introspection endpoint for additional
token validation. Not set by default.
                            disableTlsHostnameVerification:
                              type: boolean
                              description: Enable or disable TLS hostname verifi
cation. Default value is `false`.
                            enableECDSA:
                              type: boolean
                              description: Enable or disable ECDSA support by in
stalling BouncyCastle crypto provider. ECDSA support is always enabled. The Boun
cyCastle libraries are no longer packaged with Strimzi. Value is ignored.
                            enableMetrics:
                              type: boolean
                              description: Enable or disable OAuth metrics. Defa
ult value is `false`.
                            enableOauthBearer:
                              type: boolean
                              description: Enable or disable OAuth authenticatio
n over SASL_OAUTHBEARER. Default value is `true`.
                            enablePlain:
                              type: boolean
                              description: Enable or disable OAuth authenticatio
n over SASL_PLAIN. There is no re-authentication support when this mechanism is
used. Default value is `false`.
                            failFast:
                              type: boolean
                              description: Enable or disable termination of Kafk
a broker processes due to potentially recoverable runtime errors during startup.
 Default value is `true`.
                            fallbackUserNameClaim:
                              type: string
                              description: The fallback username claim to be use
d for the user ID if the claim specified by `userNameClaim` is not present. This
 is useful when `client_credentials` authentication only results in the client I
D being provided in another claim. It only takes effect if `userNameClaim` is se
t.
                            fallbackUserNamePrefix:
                              type: string
                              description: "The prefix to use with the value of
`fallbackUserNameClaim` to construct the user id. This only takes effect if `fal
lbackUserNameClaim` is true, and the value is present for the claim. Mapping use
rnames and client ids into the same user id space is useful in preventing name c
ollisions."
                            groupsClaim:
                              type: string
                              description: JsonPath query used to extract groups
 for the user during authentication. Extracted groups can be used by a custom au
thorizer. By default no groups are extracted.
                            groupsClaimDelimiter:
                              type: string
                              description: "A delimiter used to parse groups whe
n they are extracted as a single String value rather than a JSON array. Default
value is ',' (comma)."
                            httpRetries:
                              type: integer
                              description: "The maximum number of retries to att
empt if an initial HTTP request fails. If not set, the default is to not attempt
 any retries."
                            httpRetryPauseMs:
                              type: integer
                              description: "The pause to take before retrying a
failed HTTP request. If not set, the default is to not pause at all but to immed
iately repeat a request."
                            includeAcceptHeader:
                              type: boolean
                              description: Whether the Accept header should be s
et in requests to the authorization servers. The default value is `true`.
                            introspectionEndpointUri:
                              type: string
                              description: URI of the token introspection endpoi
nt which can be used to validate opaque non-JWT tokens.
                            jwksEndpointUri:
                              type: string
                              description: "URI of the JWKS certificate endpoint
, which can be used for local JWT validation."
                            jwksExpirySeconds:
                              type: integer
                              minimum: 1
                              description: Configures how often are the JWKS cer
tificates considered valid. The expiry interval has to be at least 60 seconds lo
nger then the refresh interval specified in `jwksRefreshSeconds`. Defaults to 36
0 seconds.
                            jwksIgnoreKeyUse:
                              type: boolean
                              description: Flag to ignore the 'use' attribute of
 `key` declarations in a JWKS endpoint response. Default value is `false`.
                            jwksMinRefreshPauseSeconds:
                              type: integer
                              minimum: 0
                              description: "The minimum pause between two consec
utive refreshes. When an unknown signing key is encountered the refresh is sched
uled immediately, but will always wait for this minimum pause. Defaults to 1 sec
ond."
                            jwksRefreshSeconds:
                              type: integer
                              minimum: 1
                              description: Configures how often are the JWKS cer
tificates refreshed. The refresh interval has to be at least 60 seconds shorter
then the expiry interval specified in `jwksExpirySeconds`. Defaults to 300 secon
ds.
                            listenerConfig:
                              x-kubernetes-preserve-unknown-fields: true
                              type: object
                              description: Configuration to be used for a specif
ic listener. All values are prefixed with `listener.name.<listener_name>`.
                            maxSecondsWithoutReauthentication:
                              type: integer
                              description: "Maximum number of seconds the authen
ticated session remains valid without re-authentication. This enables Apache Kaf
ka re-authentication feature, and causes sessions to expire when the access toke
n expires. If the access token expires before max time or if max time is reached
, the client has to re-authenticate, otherwise the server will drop the connecti
on. Not set by default - the authenticated session does not expire when the acce
ss token expires. This option only applies to SASL_OAUTHBEARER authentication me
chanism (when `enableOauthBearer` is `true`)."
                            readTimeoutSeconds:
                              type: integer
                              description: "The read timeout in seconds when con
necting to authorization server. If not set, the effective read timeout is 60 se
conds."
                            sasl:
                              type: boolean
                              description: Enable or disable SASL on this listen
er.
                            secrets:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    type: string
                                    description: The key under which the secret
value is stored in the Kubernetes Secret.
                                  secretName:
                                    type: string
                                    description: The name of the Kubernetes Secr
et containing the secret value.
                                required:
                                - key
                                - secretName
                              description: Secrets to be mounted to `/opt/kafka/
custom-authn-secrets/custom-listener-<listener_name>-<port>/<secret_name>`.
                            serverBearerTokenLocation:
                              type: string
                              description: Path to the file on the local filesys
tem that contains a bearer token to be used instead of client ID and secret when
 authenticating to authorization server.
                            tlsTrustedCertificates:
                              type: array
                              items:
                                type: object
                                properties:
                                  secretName:
                                    type: string
                                    description: The name of the Secret containi
ng the certificate.
                                  certificate:
                                    type: string
                                    description: The name of the file certificat
e in the secret.
                                  pattern:
                                    type: string
                                    description: "Pattern for the certificate fi
les in the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)
[_glob syntax_] for the pattern. All files in the secret that match the pattern
are used."
                                oneOf:
                                - properties:
                                    certificate: {}
                                  required:
                                  - certificate
                                - properties:
                                    pattern: {}
                                  required:
                                  - pattern
                                required:
                                - secretName
                              description: Trusted certificates for TLS connecti
on to the OAuth server.
                            tokenEndpointUri:
                              type: string
                              description: "URI of the Token Endpoint to use wit
h SASL_PLAIN mechanism when the client authenticates with `clientId` and a `secr
et`. If set, the client can authenticate over SASL_PLAIN by either setting `user
name` to `clientId`, and setting `password` to client `secret`, or by setting `u
sername` to account username, and `password` to access token prefixed with `$acc
essToken:`. If this option is not set, the `password` is always interpreted as a
n access token (without a prefix), and `username` as the account username (a so
called 'no-client-credentials' mode)."
                            type:
                              type: string
                              enum:
                              - tls
                              - scram-sha-512
                              - oauth
                              - custom
                              description: Authentication type. `oauth` type use
s SASL OAUTHBEARER Authentication. `scram-sha-512` type uses SASL SCRAM-SHA-512
Authentication. `tls` type uses TLS Client Authentication. `tls` type is support
ed only on TLS listeners.`custom` type allows for any authentication type to be
used.
                            userInfoEndpointUri:
                              type: string
                              description: 'URI of the User Info Endpoint to use
 as a fallback to obtaining the user id when the Introspection Endpoint does not
 return information that can be used for the user id. '
                            userNameClaim:
                              type: string
                              description: "Name of the claim from the JWT authe
ntication token, Introspection Endpoint response or User Info Endpoint response
which will be used to extract the user id. Defaults to `sub`."
                            userNamePrefix:
                              type: string
                              description: "The prefix to use with the value of
`userNameClaim` to construct the user ID. This only takes effect if `userNameCla
im` is specified and the value is present for the claim. When used in combinatio
n with `fallbackUserNameClaims`, it ensures consistent mapping of usernames and
client IDs into the same user ID space and prevents name collisions."
                            validIssuerUri:
                              type: string
                              description: URI of the token issuer used for auth
entication.
                            validTokenType:
                              type: string
                              description: "Valid value for the `token_type` att
ribute returned by the Introspection Endpoint. No default value, and not checked
 by default."
                          required:
                          - type
                          description: Authentication configuration for this lis
tener.
                        configuration:
                          type: object
                          properties:
                            brokerCertChainAndKey:
                              type: object
                              properties:
                                secretName:
                                  type: string
                                  description: The name of the Secret containing
 the certificate.
                                certificate:
                                  type: string
                                  description: The name of the file certificate
in the Secret.
                                key:
                                  type: string
                                  description: The name of the private key in th
e Secret.
                              required:
                              - secretName
                              - certificate
                              - key
                              description: Reference to the `Secret` which holds
 the certificate and private key pair which will be used for this listener. The
certificate can optionally contain the whole chain. This field can be used only
with listeners with enabled TLS encryption.
                            class:
                              type: string
                              description: |-
                                Configures a specific class for `Ingress` and `L
oadBalancer` that defines which controller is used. If not specified, the defaul
t controller is used.

                                * For an `ingress` listener, the operator uses t
his property to set the `ingressClassName` property in the `Ingress` resources.
                                * For a `loadbalancer` listener, the operator us
es this property to set the `loadBalancerClass` property  in the `Service` resou
rces.

                                For `ingress` and `loadbalancer` listeners only.
                            externalTrafficPolicy:
                              type: string
                              enum:
                              - Local
                              - Cluster
                              description: |-
                                Specifies whether the service routes external tr
affic to cluster-wide or node-local endpoints:

                                * `Cluster` may cause a second hop to another no
de and obscures the client source IP.
                                * `Local` avoids a second hop for `LoadBalancer`
 and `Nodeport` type services and preserves the client source IP (when supported
 by the infrastructure).

                                If unspecified, Kubernetes uses `Cluster` as the
 default. For `loadbalancer` or `nodeport` listeners only.
                            loadBalancerSourceRanges:
                              type: array
                              items:
                                type: string
                              description: "A list of CIDR ranges (for example `
10.0.0.0/8` or `130.211.204.1/32`) from which clients can connect to loadbalance
r listeners. If supported by the platform, traffic through the loadbalancer is r
estricted to the specified CIDR ranges. This field is applicable only for loadba
lancer type services and is ignored if the cloud provider does not support the f
eature. For `loadbalancer` listeners only."
                            bootstrap:
                              type: object
                              properties:
                                alternativeNames:
                                  type: array
                                  items:
                                    type: string
                                  description: Additional alternative names for
the bootstrap service. The alternative names will be added to the list of subjec
t alternative names of the TLS certificates.
                                host:
                                  type: string
                                  description: Specifies the hostname used for t
he bootstrap resource. For `route` (optional) or `ingress` (required) listeners
only. Ensure the hostname resolves to the Ingress endpoints; no validation is pe
rformed by Strimzi.
                                nodePort:
                                  type: integer
                                  description: Node port for the bootstrap servi
ce. For `nodeport` listeners only.
                                loadBalancerIP:
                                  type: string
                                  description: The loadbalancer is requested wit
h the IP address specified in this property. This feature depends on whether the
 underlying cloud provider supports specifying the `loadBalancerIP` when a load
balancer is created. This property is ignored if the cloud provider does not sup
port the feature. For `loadbalancer` listeners only.
                                annotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                  description: "Annotations added to `Ingress`,
`Route`, or `Service` resources. You can use this property to configure DNS prov
iders such as External DNS. For `loadbalancer`, `nodeport`, `route`, or `ingress
` listeners only."
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                  description: "Labels added to `Ingress`, `Rout
e`, or `Service` resources. For `loadbalancer`, `nodeport`, `route`, or `ingress
` listeners only."
                                externalIPs:
                                  type: array
                                  items:
                                    type: string
                                  description: External IPs associated to the no
deport service. These IPs are used by clients external to the Kubernetes cluster
 to access the Kafka brokers. This property is helpful when `nodeport` without `
externalIP` is not sufficient. For example on bare-metal Kubernetes clusters tha
t do not support Loadbalancer service types. For `nodeport` listeners only.
                              description: Bootstrap configuration.
                            brokers:
                              type: array
                              items:
                                type: object
                                properties:
                                  broker:
                                    type: integer
                                    description: ID of the kafka broker (broker
identifier). Broker IDs start from 0 and correspond to the number of broker repl
icas.
                                  advertisedHost:
                                    type: string
                                    description: The host name used in the broke
rs' `advertised.listeners`.
                                  advertisedPort:
                                    type: integer
                                    description: The port number used in the bro
kers' `advertised.listeners`.
                                  host:
                                    type: string
                                    description: The broker host. This field wil
l be used in the Ingress resource or in the Route resource to specify the desire
d hostname. This field can be used only with `route` (optional) or `ingress` (re
quired) type listeners.
                                  nodePort:
                                    type: integer
                                    description: Node port for the per-broker se
rvice. This field can be used only with `nodeport` type listener.
                                  loadBalancerIP:
                                    type: string
                                    description: The loadbalancer is requested w
ith the IP address specified in this field. This feature depends on whether the
underlying cloud provider supports specifying the `loadBalancerIP` when a load b
alancer is created. This field is ignored if the cloud provider does not support
 the feature.This field can be used only with `loadbalancer` type listener.
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    type: object
                                    description: "Annotations that will be added
 to the `Ingress` or `Service` resource. You can use this field to configure DNS
 providers such as External DNS. This field can be used only with `loadbalancer`
, `nodeport`, or `ingress` type listeners."
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                    description: "Labels that will be added to t
he `Ingress`, `Route`, or `Service` resource. This field can be used only with `
loadbalancer`, `nodeport`, `route`, or `ingress` type listeners."
                                  externalIPs:
                                    type: array
                                    items:
                                      type: string
                                    description: External IPs associated to the
nodeport service. These IPs are used by clients external to the Kubernetes clust
er to access the Kafka brokers. This property is helpful when `nodeport` without `e
xternalIP` is not sufficient. For example on bare-metal Kubernetes clusters that
 do not support Loadbalancer service types. This field can only be used with `no
deport` type listener.
                                required:
                                - broker
                              description: Per-broker configurations.
                            ipFamilyPolicy:
                              type: string
                              enum:
                              - SingleStack
                              - PreferDualStack
                              - RequireDualStack
                              description: |-
                                Specifies the IP Family Policy used by the servi
ce. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack
`:

                                * `SingleStack` is for a single IP family.
                                * `PreferDualStack` is for two IP families on du
al-stack configured clusters or a single IP family on single-stack clusters.
                                * `RequireDualStack` fails unless there are two
IP families on dual-stack configured clusters.

                                If unspecified, Kubernetes will choose the defau
lt value based on the service type.
                            ipFamilies:
                              type: array
                              items:
                                type: string
                                enum:
                                - IPv4
                                - IPv6
                              description: "Specifies the IP Families used by th
e service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes w
ill choose the default value based on the `ipFamilyPolicy` setting."
                            createBootstrapService:
                              type: boolean
                              description: Whether to create the bootstrap servi
ce or not. The bootstrap service is created by default (if not specified differe
ntly). This field can be used with the `loadbalancer` listener.
                            finalizers:
                              type: array
                              items:
                                type: string
                              description: "A list of finalizers configured for
the `LoadBalancer` type services created for this listener. If supported by the
platform, the finalizer `service.kubernetes.io/load-balancer-cleanup` to make su
re that the external load balancer is deleted together with the service.For more
 information, see https://kubernetes.io/docs/tasks/access-application-cluster/cr
eate-external-load-balancer/#garbage-collecting-load-balancers. For `loadbalance
r` listeners only."
                            useServiceDnsDomain:
                              type: boolean
                              description: |-
                                Configures whether the Kubernetes service DNS do
main should be included in the generated addresses.

                                * If set to `false`, the generated addresses do
not contain the service DNS domain suffix. For example, `my-cluster-kafka-0.my-c
luster-kafka-brokers.myproject.svc`.
                                * If set to `true`, the generated addresses cont
ain the service DNS domain suffix. For example, `my-cluster-kafka-0.my-cluster-k
afka-brokers.myproject.svc.cluster.local`.

                                The default is `.cluster.local`, but this is cus
tomizable using the environment variable `KUBERNETES_SERVICE_DNS_DOMAIN`. For `i
nternal` and `cluster-ip` listeners only.
                            maxConnections:
                              type: integer
                              description: The maximum number of connections we
allow for this listener in the broker at any time. New connections are blocked i
f the limit is reached.
                            maxConnectionCreationRate:
                              type: integer
                              description: The maximum connection creation rate
we allow in this listener at any time. New connections will be throttled if the
limit is reached.
                            preferredNodePortAddressType:
                              type: string
                              enum:
                              - ExternalIP
                              - ExternalDNS
                              - InternalIP
                              - InternalDNS
                              - Hostname
                              description: |-
                                Defines which address type should be used as the
 node address. Available types are: `ExternalDNS`, `ExternalIP`, `InternalDNS`,
`InternalIP` and `Hostname`. By default, the addresses are used in the following
 order (the first one found is used):

                                * `ExternalDNS`
                                * `ExternalIP`
                                * `InternalDNS`
                                * `InternalIP`
                                * `Hostname`

                                This property is used to select the preferred ad
dress type, which is checked first. If no address is found for this address type
, the other types are checked in the default order.For `nodeport` listeners only
.
                            publishNotReadyAddresses:
                              type: boolean
                              description: Configures whether the service endpoi
nts are considered "ready" even if the Pods themselves are not. Defaults to `fal
se`. This field can not be used with `internal` listeners.
                            hostTemplate:
                              type: string
                              description: "Configures the template for generati
ng the hostnames of the individual brokers. Valid placeholders that you can use
in the template are `{nodeId}` and `{nodePodName}`."
                            advertisedHostTemplate:
                              type: string
                              description: "Configures the template for generati
ng the advertised hostnames of the individual brokers. Valid placeholders that y
ou can use in the template are `{nodeId}` and `{nodePodName}`."
                            allocateLoadBalancerNodePorts:
                              type: boolean
                              description: |-
                                Configures whether to allocate NodePort automati
cally for the `Service` with type `LoadBalancer`.
                                This is a one to one with the `spec.allocateLoad
BalancerNodePorts` configuration in the `Service` type
                                For `loadbalancer` listeners only.
                          description: Additional listener configuration.
                        networkPolicyPeers:
                          type: array
                          items:
                            type: object
                            properties:
                              ipBlock:
                                type: object
                                properties:
                                  cidr:
                                    type: string
                                  except:
                                    type: array
                                    items:
                                      type: string
                              namespaceSelector:
                                type: object
                                properties:
                                  matchExpressions:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          type: array
                                          items:
                                            type: string
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    type: object
                              podSelector:
                                type: object
                                properties:
                                  matchExpressions:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          type: array
                                          items:
                                            type: string
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    type: object
                          description: "List of peers which should be able to co
nnect to this listener. Peers in this list are combined using a logical OR opera
tion. If this field is empty or missing, all connections will be allowed for thi
s listener. If this field is present and contains at least one item, the listene
r only allows the traffic which matches at least one item in this list."
                      required:
                      - name
                      - port
                      - type
                      - tls
                    description: Configures listeners to provide access to Kafka
 brokers.
                  config:
                    x-kubernetes-preserve-unknown-fields: true
                    type: object
                    description: "Kafka broker config properties with the follow
ing prefixes cannot be set: listeners, advertised., broker., listener., host.nam
e, port, inter.broker.listener.name, sasl., ssl., security., password., log.dir,
 zookeeper.connect, zookeeper.set.acl, zookeeper.ssl, zookeeper.clientCnxnSocket
, authorizer., super.user, cruise.control.metrics.topic, cruise.control.metrics.
reporter.bootstrap.servers, node.id, process.roles, controller., metadata.log.di
r, zookeeper.metadata.migration.enable, client.quota.callback.static.kafka.admin
., client.quota.callback.static.produce, client.quota.callback.static.fetch, cli
ent.quota.callback.static.storage.per.volume.limit.min.available., client.quota.
callback.static.excluded.principal.name.list, prometheus.metrics.reporter. (with
 the exception of: zookeeper.connection.timeout.ms, sasl.server.max.receive.size
, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, ssl.secure.random.impl
ementation, cruise.control.metrics.topic.num.partitions, cruise.control.metrics.
topic.replication.factor, cruise.control.metrics.topic.retention.ms, cruise.cont
rol.metrics.topic.auto.create.retries, cruise.control.metrics.topic.auto.create.
timeout.ms, cruise.control.metrics.topic.min.insync.replicas, controller.quorum.
election.backoff.max.ms, controller.quorum.election.timeout.ms, controller.quoru
m.fetch.timeout.ms)."
                  storage:
                    type: object
                    properties:
                      class:
                        type: string
                        description: The storage class to use for dynamic volume
 allocation.
                      deleteClaim:
                        type: boolean
                        description: Specifies if the persistent volume claim ha
s to be deleted when the cluster is un-deployed.
                      id:
                        type: integer
                        minimum: 0
                        description: Storage identification number. It is mandat
ory only for storage volumes defined in a storage of type 'jbod'.
                      kraftMetadata:
                        type: string
                        enum:
                        - shared
                        description: "Specifies whether this volume should be us
ed for storing KRaft metadata. This property is optional. When set, the only cur
rently supported value is `shared`. At most one volume can have this property se
t."
                      overrides:
                        type: array
                        items:
                          type: object
                          properties:
                            class:
                              type: string
                              description: The storage class to use for dynamic
volume allocation for this broker.
                            broker:
                              type: integer
                              description: Id of the kafka broker (broker identi
fier).
                        description: "As of Strimzi 0.46.0, the storage override
s for individual brokers are not supported anymore and this option is ignored."
                      selector:
                        additionalProperties:
                          type: string
                        type: object
                        description: Specifies a specific persistent volume to u
se. It contains key:value pairs representing labels for selecting such a volume.
                      size:
                        type: string
                        description: "When `type=persistent-claim`, defines the
size of the persistent volume claim, such as 100Gi. Mandatory when `type=persist
ent-claim`."
                      sizeLimit:
                        type: string
                        pattern: "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                        description: "When type=ephemeral, defines the total amo
unt of local storage required for this EmptyDir volume (for example 1Gi)."
                      type:
                        type: string
                        enum:
                        - ephemeral
                        - persistent-claim
                        - jbod
                        description: "Storage type, must be either 'ephemeral',
'persistent-claim', or 'jbod'."
                      volumes:
                        type: array
                        items:
                          type: object
                          properties:
                            class:
                              type: string
                              description: The storage class to use for dynamic
volume allocation.
                            deleteClaim:
                              type: boolean
                              description: Specifies if the persistent volume cl
aim has to be deleted when the cluster is un-deployed.
                            id:
                              type: integer
                              minimum: 0
                              description: Storage identification number. Mandat
ory for storage volumes defined with a `jbod` storage type configuration.
                            kraftMetadata:
                              type: string
                              enum:
                              - shared
                              description: "Specifies whether this volume should
 be used for storing KRaft metadata. This property is optional. When set, the on
ly currently supported value is `shared`. At most one volume can have this prope
rty set."
                            overrides:
                              type: array
                              items:
                                type: object
                                properties:
                                  class:
                                    type: string
                                    description: The storage class to use for dy
namic volume allocation for this broker.
                                  broker:
                                    type: integer
                                    description: Id of the kafka broker (broker
identifier).
                              description: "As of Strimzi 0.46.0, the storage ov
errides for individual brokers are not supported anymore and this option is igno
red."
                            selector:
                              additionalProperties:
                                type: string
                              type: object
                              description: Specifies a specific persistent volum
e to use. It contains key:value pairs representing labels for selecting such a v
olume.
                            size:
                              type: string
                              description: "When `type=persistent-claim`, define
s the size of the persistent volume claim, such as 100Gi. Mandatory when `type=p
ersistent-claim`."
                            sizeLimit:
                              type: string
                              pattern: "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                              description: "When type=ephemeral, defines the tot
al amount of local storage required for this EmptyDir volume (for example 1Gi)."
                            type:
                              type: string
                              enum:
                              - ephemeral
                              - persistent-claim
                              description: "Storage type, must be either 'epheme
ral' or 'persistent-claim'."
                          required:
                          - type
                        description: List of volumes as Storage objects represen
ting the JBOD disks array.
                    required:
                    - type
                    description: Storage is now configured in the `KafkaNodePool
` resources and this option is ignored.
                  authorization:
                    type: object
                    properties:
                      allowOnError:
                        type: boolean
                        description: "Defines whether a Kafka client should be a
llowed or denied by default when the authorizer fails to query the Open Policy A
gent, for example, when it is temporarily unavailable). Defaults to `false` - al
l actions will be denied."
                      authorizerClass:
                        type: string
                        description: "Authorization implementation class, which
must be available in classpath."
                      clientId:
                        type: string
                        description: OAuth Client ID which the Kafka client can
use to authenticate against the OAuth server and use the token endpoint URI.
                      connectTimeoutSeconds:
                        type: integer
                        minimum: 1
                        description: "The connect timeout in seconds when connec
ting to authorization server. If not set, the effective connect timeout is 60 se
conds."
                      delegateToKafkaAcls:
                        type: boolean
                        description: Whether authorization decision should be de
legated to the 'Simple' authorizer if DENIED by Keycloak Authorization Services
policies. Default value is `false`.
                      disableTlsHostnameVerification:
                        type: boolean
                        description: Enable or disable TLS hostname verification
. Default value is `false`.
                      enableMetrics:
                        type: boolean
                        description: Enable or disable OAuth metrics. The defaul
t value is `false`.
                      expireAfterMs:
                        type: integer
                        description: The expiration of the records kept in the l
ocal cache to avoid querying the Open Policy Agent for every request. Defines ho
w often the cached authorization decisions are reloaded from the Open Policy Age
nt server. In milliseconds. Defaults to `3600000`.
                      grantsAlwaysLatest:
                        type: boolean
                        description: "Controls whether the latest grants are fet
ched for a new session. When enabled, grants are retrieved from Keycloak and cac
hed for the user. The default value is `false`."
                      grantsGcPeriodSeconds:
                        type: integer
                        minimum: 1
                        description: "The time, in seconds, between consecutive
runs of a job that cleans stale grants from the cache. The default value is 300.
"
                      grantsMaxIdleTimeSeconds:
                        type: integer
                        minimum: 1
                        description: "The time, in seconds, after which an idle
grant can be evicted from the cache. The default value is 300."
                      grantsRefreshPeriodSeconds:
                        type: integer
                        minimum: 0
                        description: The time between two consecutive grants ref
resh runs in seconds. The default value is 60.
                      grantsRefreshPoolSize:
                        type: integer
                        minimum: 1
                        description: "The number of threads to use to refresh gr
ants for active sessions. The more threads, the more parallelism, so the sooner
the job completes. However, using more threads places a heavier load on the auth
orization server. The default value is 5."
                      httpRetries:
                        type: integer
                        minimum: 0
                        description: "The maximum number of retries to attempt i
f an initial HTTP request fails. If not set, the default is to not attempt any r
etries."
                      includeAcceptHeader:
                        type: boolean
                        description: Whether the Accept header should be set in
requests to the authorization servers. The default value is `true`.
                      initialCacheCapacity:
                        type: integer
                        description: Initial capacity of the local cache used by
 the authorizer to avoid querying the Open Policy Agent for every request Defaul
ts to `5000`.
                      maximumCacheSize:
                        type: integer
                        description: Maximum capacity of the local cache used by
 the authorizer to avoid querying the Open Policy Agent for every request. Defau
lts to `50000`.
                      readTimeoutSeconds:
                        type: integer
                        minimum: 1
                        description: "The read timeout in seconds when connectin
g to authorization server. If not set, the effective read timeout is 60 seconds.
"
                      superUsers:
                        type: array
                        items:
                          type: string
                        description: "List of super users, which are user princi
pals with unlimited access rights."
                      supportsAdminApi:
                        type: boolean
                        description: Indicates whether the custom authorizer sup
ports the APIs for managing ACLs using the Kafka Admin API. Defaults to `false`.
                      tlsTrustedCertificates:
                        type: array
                        items:
                          type: object
                          properties:
                            secretName:
                              type: string
                              description: The name of the Secret containing the
 certificate.
                            certificate:
                              type: string
                              description: The name of the file certificate in t
he secret.
                            pattern:
                              type: string
                              description: "Pattern for the certificate files in
 the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)[_glob
 syntax_] for the pattern. All files in the secret that match the pattern are us
ed."
                          oneOf:
                          - properties:
                              certificate: {}
                            required:
                            - certificate
                          - properties:
                              pattern: {}
                            required:
                            - pattern
                          required:
                          - secretName
                        description: Trusted certificates for TLS connection to
the OAuth server.
                      tokenEndpointUri:
                        type: string
                        description: Authorization server token endpoint URI.
                      type:
                        type: string
                        enum:
                        - simple
                        - opa
                        - keycloak
                        - custom
                        description: "Authorization type. Currently, the support
ed types are `simple`, `keycloak`, `opa` and `custom`. `simple` authorization ty
pe uses Kafka's built-in authorizer for authorization. `keycloak` authorization
type uses Keycloak Authorization Services for authorization. `opa` authorization
 type uses Open Policy Agent based authorization. `custom` authorization type us
es user-provided implementation for authorization. As of Strimzi 0.46.0, `opa` t
ype is deprecated and will be removed in the future. Please use `custom` type in
stead."
                      url:
                        type: string
                        example: http://opa:8181/v1/data/kafka/authz/allow
                        description: The URL used to connect to the Open Policy
Agent server. The URL has to include the policy which will be queried by the aut
horizer. This option is required.
                    required:
                    - type
                    description: Authorization configuration for Kafka brokers.
                  rack:
                    type: object
                    properties:
                      topologyKey:
                        type: string
                        example: topology.kubernetes.io/zone
                        description: "A key that matches labels assigned to the
Kubernetes cluster nodes. The value of the label is used to set a broker's `brok
er.rack` config, and the `client.rack` config for Kafka Connect or MirrorMaker 2
."
                    required:
                    - topologyKey
                    description: Configuration of the `broker.rack` broker confi
g.
                  brokerRackInitImage:
                    type: string
                    description: The image of the init container used for initia
lizing the `broker.rack`.
                  livenessProbe:
                    type: object
                    properties:
                      initialDelaySeconds:
                        type: integer
                        minimum: 0
                        description: The initial delay before first the health i
s first checked. Default to 15 seconds. Minimum value is 0.
                      timeoutSeconds:
                        type: integer
                        minimum: 1
                        description: The timeout for each attempted health check
. Default to 5 seconds. Minimum value is 1.
                      periodSeconds:
                        type: integer
                        minimum: 1
                        description: How often (in seconds) to perform the probe
. Default to 10 seconds. Minimum value is 1.
                      successThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive successes for the probe
 to be considered successful after having failed. Defaults to 1. Must be 1 for l
iveness. Minimum value is 1.
                      failureThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive failures for the probe
to be considered failed after having succeeded. Defaults to 3. Minimum value is
1.
                    description: Pod liveness checking.
                  readinessProbe:
                    type: object
                    properties:
                      initialDelaySeconds:
                        type: integer
                        minimum: 0
                        description: The initial delay before first the health i
s first checked. Default to 15 seconds. Minimum value is 0.
                      timeoutSeconds:
                        type: integer
                        minimum: 1
                        description: The timeout for each attempted health check
. Default to 5 seconds. Minimum value is 1.
                      periodSeconds:
                        type: integer
                        minimum: 1
                        description: How often (in seconds) to perform the probe
. Default to 10 seconds. Minimum value is 1.
                      successThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive successes for the probe
 to be considered successful after having failed. Defaults to 1. Must be 1 for l
iveness. Minimum value is 1.
                      failureThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive failures for the probe
to be considered failed after having succeeded. Defaults to 3. Minimum value is
1.
                    description: Pod readiness checking.
                  jvmOptions:
                    type: object
                    properties:
                      "-XX":
                        additionalProperties:
                          type: string
                        type: object
                        description: A map of -XX options to the JVM.
                      "-Xmx":
                        type: string
                        pattern: "^[0-9]+[mMgG]?$"
                        description: -Xmx option to to the JVM.
                      "-Xms":
                        type: string
                        pattern: "^[0-9]+[mMgG]?$"
                        description: -Xms option to to the JVM.
                      gcLoggingEnabled:
                        type: boolean
                        description: Specifies whether the Garbage Collection lo
gging is enabled. The default is false.
                      javaSystemProperties:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: The system property name.
                            value:
                              type: string
                              description: The system property value.
                        description: A map of additional system properties which
 will be passed using the `-D` option to the JVM.
                    description: JVM Options for pods.
                  jmxOptions:
                    type: object
                    properties:
                      authentication:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                            - password
                            description: Authentication type. Currently the only
 supported types are `password`.`password` type creates a username and protected
 port with no TLS.
                        required:
                        - type
                        description: Authentication configuration for connecting
 to the JMX port.
                    description: JMX Options for Kafka brokers.
                  resources:
                    type: object
                    properties:
                      claims:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            request:
                              type: string
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(
([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          x-kubernetes-int-or-string: true
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(
([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          x-kubernetes-int-or-string: true
                        type: object
                    description: CPU and memory resources to reserve.
                  metricsConfig:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                        - jmxPrometheusExporter
                        - strimziMetricsReporter
                        description: Metrics type. The supported types are `jmxP
rometheusExporter` and `strimziMetricsReporter`. Type `jmxPrometheusExporter` us
es the Prometheus JMX Exporter to expose Kafka JMX metrics in Prometheus format
through an HTTP endpoint. Type `strimziMetricsReporter` uses the Strimzi Metrics
 Reporter to directly expose Kafka metrics in Prometheus format through an HTTP
endpoint.
                      valueFrom:
                        type: object
                        properties:
                          configMapKeyRef:
                            type: object
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                              optional:
                                type: boolean
                            description: Reference to the key in the ConfigMap c
ontaining the configuration.
                        description: ConfigMap entry where the Prometheus JMX Ex
porter configuration is stored.
                      values:
                        type: object
                        properties:
                          allowList:
                            type: array
                            items:
                              type: string
                            description: A list of regex patterns to filter the
metrics to collect. Should contain at least one element.
                        description: Configuration values for the Strimzi Metric
s Reporter.
                    required:
                    - type
                    description: Metrics configuration.
                    x-kubernetes-validations:
                    - rule: self.type != 'jmxPrometheusExporter' || has(self.val
ueFrom)
                      message: valueFrom property is required
                  logging:
                    type: object
                    properties:
                      loggers:
                        additionalProperties:
                          type: string
                        type: object
                        description: A Map from logger name to logger level.
                      type:
                        type: string
                        enum:
                        - inline
                        - external
                        description: "Logging type, must be either 'inline' or '
external'."
                      valueFrom:
                        type: object
                        properties:
                          configMapKeyRef:
                            type: object
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                              optional:
                                type: boolean
                            description: Reference to the key in the ConfigMap c
ontaining the configuration.
                        description: '`ConfigMap` entry where the logging config
uration is stored. '
                    required:
                    - type
                    description: Logging configuration for Kafka.
                  template:
                    type: object
                    properties:
                      statefulset:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                          podManagementPolicy:
                            type: string
                            enum:
                            - OrderedReady
                            - Parallel
                            description: PodManagementPolicy which will be used
for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults t
o `Parallel`.
                        description: Template for Kafka `StatefulSet`.
                      pod:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                          imagePullSecrets:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                            description: "List of references to secrets in the s
ame namespace to use for pulling any of the images used by this Pod. When the `S
TRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `ima
gePullSecrets` option are specified, only the `imagePullSecrets` variable is use
d and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored."
                          securityContext:
                            type: object
                            properties:
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              fsGroup:
                                type: integer
                              fsGroupChangePolicy:
                                type: string
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxChangePolicy:
                                type: string
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              supplementalGroups:
                                type: array
                                items:
                                  type: integer
                              supplementalGroupsPolicy:
                                type: string
                              sysctls:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Configures pod-level security attribute
s and common container settings.
                          terminationGracePeriodSeconds:
                            type: integer
                            minimum: 0
                            description: "The grace period is the duration in se
conds after the processes running in the pod are sent a termination signal, and
the time when the processes are forcibly halted with a kill signal. Set this val
ue to longer than the expected cleanup time for your process. Value must be a no
n-negative integer. A zero value indicates delete immediately. You might need to
 increase the grace period for very large Kafka clusters, so that the Kafka brok
ers have enough time to transfer their work to another broker before they are te
rminated. Defaults to 30 seconds."
                          affinity:
                            type: object
                            properties:
                              nodeAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecutio
n:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        preference:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution
:
                                    type: object
                                    properties:
                                      nodeSelectorTerms:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                              podAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecutio
n:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution
:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                              podAntiAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecutio
n:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution
:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                            description: The pod's affinity rules.
                          tolerations:
                            type: array
                            items:
                              type: object
                              properties:
                                effect:
                                  type: string
                                key:
                                  type: string
                                operator:
                                  type: string
                                tolerationSeconds:
                                  type: integer
                                value:
                                  type: string
                            description: The pod's tolerations.
                          topologySpreadConstraints:
                            type: array
                            items:
                              type: object
                              properties:
                                labelSelector:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                matchLabelKeys:
                                  type: array
                                  items:
                                    type: string
                                maxSkew:
                                  type: integer
                                minDomains:
                                  type: integer
                                nodeAffinityPolicy:
                                  type: string
                                nodeTaintsPolicy:
                                  type: string
                                topologyKey:
                                  type: string
                                whenUnsatisfiable:
                                  type: string
                            description: The pod's topology spread constraints.
                          priorityClassName:
                            type: string
                            description: 'The name of the priority class used to
 assign priority to the pods. '
                          schedulerName:
                            type: string
                            description: "The name of the scheduler used to disp
atch this `Pod`. If not specified, the default scheduler will be used."
                          hostAliases:
                            type: array
                            items:
                              type: object
                              properties:
                                hostnames:
                                  type: array
                                  items:
                                    type: string
                                ip:
                                  type: string
                            description: The pod's HostAliases. HostAliases is a
n optional list of hosts and IPs that will be injected into the Pod's hosts file
 if specified.
                          dnsPolicy:
                            type: string
                            enum:
                            - ClusterFirst
                            - ClusterFirstWithHostNet
                            - Default
                            - None
                            description: "The pod's DNSPolicy. Defaults to `Clus
terFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default`
 or `None`."
                          dnsConfig:
                            type: object
                            properties:
                              nameservers:
                                type: array
                                items:
                                  type: string
                              options:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              searches:
                                type: array
                                items:
                                  type: string
                            description: "The pod's DNSConfig. If specified, it
will be merged to the generated DNS configuration based on the DNSPolicy."
                          enableServiceLinks:
                            type: boolean
                            description: Indicates whether information about ser
vices should be injected into Pod's environment variables.
                          tmpDirSizeLimit:
                            type: string
                            pattern: "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                            description: "Defines the total amount of pod memory
 allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in
 memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. T
he `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a h
igh value as it consumes pod memory resources."
                          volumes:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Name to use for the volume. Requi
red.
                                secret:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    optional:
                                      type: boolean
                                    secretName:
                                      type: string
                                  description: '`Secret` to use to populate the
volume.'
                                configMap:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  description: '`ConfigMap` to use to populate t
he volume.'
                                emptyDir:
                                  type: object
                                  properties:
                                    medium:
                                      type: string
                                    sizeLimit:
                                      type: object
                                      properties:
                                        amount:
                                          type: string
                                        format:
                                          type: string
                                  description: '`EmptyDir` to use to populate th
e volume.'
                                persistentVolumeClaim:
                                  type: object
                                  properties:
                                    claimName:
                                      type: string
                                    readOnly:
                                      type: boolean
                                  description: '`PersistentVolumeClaim` object t
o use to populate the volume.'
                                csi:
                                  type: object
                                  properties:
                                    driver:
                                      type: string
                                    fsType:
                                      type: string
                                    nodePublishSecretRef:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                    readOnly:
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  description: '`CSIVolumeSource` object to use
to populate the volume.'
                                image:
                                  type: object
                                  properties:
                                    pullPolicy:
                                      type: string
                                    reference:
                                      type: string
                                  description: '`ImageVolumeSource` object to us
e to populate the volume.'
                              oneOf:
                              - properties:
                                  secret: {}
                                  configMap: {}
                                  emptyDir: {}
                                  persistentVolumeClaim: {}
                                  csi: {}
                                  image: {}
                            description: Additional volumes that can be mounted
to the pod.
                        description: Template for ZooKeeper `Pods`.
                      clientService:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                          ipFamilyPolicy:
                            type: string
                            enum:
                            - SingleStack
                            - PreferDualStack
                            - RequireDualStack
                            description: "Specifies the IP Family Policy used by
 the service. Available options are `SingleStack`, `PreferDualStack` and `Requir
eDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for t
wo IP families on dual-stack configured clusters or a single IP family on single
-stack clusters. `RequireDualStack` fails unless there are two IP families on du
al-stack configured clusters. If unspecified, Kubernetes will choose the default
 value based on the service type."
                          ipFamilies:
                            type: array
                            items:
                              type: string
                              enum:
                              - IPv4
                              - IPv6
                            description: "Specifies the IP Families used by the
service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes wil
l choose the default value based on the `ipFamilyPolicy` setting."
                        description: Template for ZooKeeper client `Service`.
                      nodesService:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                          ipFamilyPolicy:
                            type: string
                            enum:
                            - SingleStack
                            - PreferDualStack
                            - RequireDualStack
                            description: "Specifies the IP Family Policy used by
 the service. Available options are `SingleStack`, `PreferDualStack` and `Requir
eDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for t
wo IP families on dual-stack configured clusters or a single IP family on single
-stack clusters. `RequireDualStack` fails unless there are two IP families on du
al-stack configured clusters. If unspecified, Kubernetes will choose the default
 value based on the service type."
                          ipFamilies:
                            type: array
                            items:
                              type: string
                              enum:
                              - IPv4
                              - IPv6
                            description: "Specifies the IP Families used by the
service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes wil
l choose the default value based on the `ipFamilyPolicy` setting."
                        description: Template for ZooKeeper nodes `Service`.
                      persistentVolumeClaim:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                        description: Template for all ZooKeeper `PersistentVolum
eClaims`.
                      podDisruptionBudget:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata to apply to the `PodDisruption
BudgetTemplate` resource.
                          maxUnavailable:
                            type: integer
                            minimum: 0
                            description: "Maximum number of unavailable pods to
allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable
` number of pods or fewer are unavailable after the eviction. Setting this value
 to 0 prevents all voluntary evictions, so the pods must be evicted manually. De
faults to 1."
                        description: Template for ZooKeeper `PodDisruptionBudget
`.
                      zookeeperContainer:
                        type: object
                        properties:
                          env:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The environment variable key.
                                value:
                                  type: string
                                  description: The environment variable value.
                                valueFrom:
                                  type: object
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a secre
t.
                                    configMapKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a confi
g map.
                                  oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                    - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                    - configMapKeyRef
                                  description: Reference to the secret or config
 map property to which the environment variable is set.
                              oneOf:
                              - properties:
                                  value: {}
                                required:
                                - value
                              - properties:
                                  valueFrom: {}
                                required:
                                - valueFrom
                            description: Environment variables which should be a
pplied to the container.
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Security context for the container.
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                recursiveReadOnly:
                                  type: string
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                            description: Additional volume mounts which should b
e applied to the container.
                        description: Template for the ZooKeeper container.
                      serviceAccount:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                        description: Template for the ZooKeeper service account.
                      jmxSecret:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                        description: Template for Secret of the Zookeeper Cluste
r JMX authentication.
                    description: Template for ZooKeeper cluster resources. The t
emplate allows users to specify how the Kubernetes resources are generated.
                required:
                - replicas
                - storage
                description: "As of Strimzi 0.46.0, ZooKeeper-based Apache Kafka
 clusters are not supported anymore and this option is ignored."
              entityOperator:
                type: object
                properties:
                  topicOperator:
                    type: object
                    properties:
                      watchedNamespace:
                        type: string
                        description: The namespace the Topic Operator should wat
ch.
                      image:
                        type: string
                        description: The image to use for the Topic Operator.
                      reconciliationIntervalSeconds:
                        type: integer
                        minimum: 0
                        description: Interval between periodic reconciliations i
n seconds. Ignored if reconciliationIntervalMs is set.
                      reconciliationIntervalMs:
                        type: integer
                        minimum: 0
                        description: Interval between periodic reconciliations i
n milliseconds.
                      zookeeperSessionTimeoutSeconds:
                        type: integer
                        minimum: 0
                        description: Timeout for the ZooKeeper session.
                      startupProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                            description: The initial delay before first the heal
th is first checked. Default to 15 seconds. Minimum value is 0.
                          timeoutSeconds:
                            type: integer
                            minimum: 1
                            description: The timeout for each attempted health c
heck. Default to 5 seconds. Minimum value is 1.
                          periodSeconds:
                            type: integer
                            minimum: 1
                            description: How often (in seconds) to perform the p
robe. Default to 10 seconds. Minimum value is 1.
                          successThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive successes for the p
robe to be considered successful after having failed. Defaults to 1. Must be 1 f
or liveness. Minimum value is 1.
                          failureThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive failures for the pr
obe to be considered failed after having succeeded. Defaults to 3. Minimum value
 is 1.
                        description: Pod startup checking.
                      livenessProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                            description: The initial delay before first the heal
th is first checked. Default to 15 seconds. Minimum value is 0.
                          timeoutSeconds:
                            type: integer
                            minimum: 1
                            description: The timeout for each attempted health c
heck. Default to 5 seconds. Minimum value is 1.
                          periodSeconds:
                            type: integer
                            minimum: 1
                            description: How often (in seconds) to perform the p
robe. Default to 10 seconds. Minimum value is 1.
                          successThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive successes for the p
robe to be considered successful after having failed. Defaults to 1. Must be 1 f
or liveness. Minimum value is 1.
                          failureThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive failures for the pr
obe to be considered failed after having succeeded. Defaults to 3. Minimum value
 is 1.
                        description: Pod liveness checking.
                      readinessProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                            description: The initial delay before first the heal
th is first checked. Default to 15 seconds. Minimum value is 0.
                          timeoutSeconds:
                            type: integer
                            minimum: 1
                            description: The timeout for each attempted health c
heck. Default to 5 seconds. Minimum value is 1.
                          periodSeconds:
                            type: integer
                            minimum: 1
                            description: How often (in seconds) to perform the p
robe. Default to 10 seconds. Minimum value is 1.
                          successThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive successes for the p
robe to be considered successful after having failed. Defaults to 1. Must be 1 f
or liveness. Minimum value is 1.
                          failureThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive failures for the pr
obe to be considered failed after having succeeded. Defaults to 3. Minimum value
 is 1.
                        description: Pod readiness checking.
                      resources:
                        type: object
                        properties:
                          claims:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                request:
                                  type: string
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]
+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]
+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            type: object
                        description: CPU and memory resources to reserve.
                      topicMetadataMaxAttempts:
                        type: integer
                        minimum: 0
                        description: The number of attempts at getting topic met
adata.
                      logging:
                        type: object
                        properties:
                          loggers:
                            additionalProperties:
                              type: string
                            type: object
                            description: A Map from logger name to logger level.
                          type:
                            type: string
                            enum:
                            - inline
                            - external
                            description: "Logging type, must be either 'inline'
or 'external'."
                          valueFrom:
                            type: object
                            properties:
                              configMapKeyRef:
                                type: object
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                description: Reference to the key in the ConfigM
ap containing the configuration.
                            description: '`ConfigMap` entry where the logging co
nfiguration is stored. '
                        required:
                        - type
                        description: Logging configuration.
                      jvmOptions:
                        type: object
                        properties:
                          "-XX":
                            additionalProperties:
                              type: string
                            type: object
                            description: A map of -XX options to the JVM.
                          "-Xmx":
                            type: string
                            pattern: "^[0-9]+[mMgG]?$"
                            description: -Xmx option to to the JVM.
                          "-Xms":
                            type: string
                            pattern: "^[0-9]+[mMgG]?$"
                            description: -Xms option to to the JVM.
                          gcLoggingEnabled:
                            type: boolean
                            description: Specifies whether the Garbage Collectio
n logging is enabled. The default is false.
                          javaSystemProperties:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The system property name.
                                value:
                                  type: string
                                  description: The system property value.
                            description: A map of additional system properties w
hich will be passed using the `-D` option to the JVM.
                        description: JVM Options for pods.
                    description: Configuration of the Topic Operator.
                  userOperator:
                    type: object
                    properties:
                      watchedNamespace:
                        type: string
                        description: The namespace the User Operator should watc
h.
                      image:
                        type: string
                        description: The image to use for the User Operator.
                      reconciliationIntervalSeconds:
                        type: integer
                        minimum: 0
                        description: Interval between periodic reconciliations i
n seconds. Ignored if reconciliationIntervalMs is set.
                      reconciliationIntervalMs:
                        type: integer
                        minimum: 0
                        description: Interval between periodic reconciliations i
n milliseconds.
                      zookeeperSessionTimeoutSeconds:
                        type: integer
                        minimum: 0
                        description: Timeout for the ZooKeeper session.
                      secretPrefix:
                        type: string
                        description: The prefix that will be added to the KafkaU
ser name to be used as the Secret name.
                      livenessProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                            description: The initial delay before first the heal
th is first checked. Default to 15 seconds. Minimum value is 0.
                          timeoutSeconds:
                            type: integer
                            minimum: 1
                            description: The timeout for each attempted health c
heck. Default to 5 seconds. Minimum value is 1.
                          periodSeconds:
                            type: integer
                            minimum: 1
                            description: How often (in seconds) to perform the p
robe. Default to 10 seconds. Minimum value is 1.
                          successThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive successes for the p
robe to be considered successful after having failed. Defaults to 1. Must be 1 f
or liveness. Minimum value is 1.
                          failureThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive failures for the pr
obe to be considered failed after having succeeded. Defaults to 3. Minimum value
 is 1.
                        description: Pod liveness checking.
                      readinessProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                            description: The initial delay before first the heal
th is first checked. Default to 15 seconds. Minimum value is 0.
                          timeoutSeconds:
                            type: integer
                            minimum: 1
                            description: The timeout for each attempted health c
heck. Default to 5 seconds. Minimum value is 1.
                          periodSeconds:
                            type: integer
                            minimum: 1
                            description: How often (in seconds) to perform the p
robe. Default to 10 seconds. Minimum value is 1.
                          successThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive successes for the p
robe to be considered successful after having failed. Defaults to 1. Must be 1 f
or liveness. Minimum value is 1.
                          failureThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive failures for the pr
obe to be considered failed after having succeeded. Defaults to 3. Minimum value
 is 1.
                        description: Pod readiness checking.
                      resources:
                        type: object
                        properties:
                          claims:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                request:
                                  type: string
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]
+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]
+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            type: object
                        description: CPU and memory resources to reserve.
                      logging:
                        type: object
                        properties:
                          loggers:
                            additionalProperties:
                              type: string
                            type: object
                            description: A Map from logger name to logger level.
                          type:
                            type: string
                            enum:
                            - inline
                            - external
                            description: "Logging type, must be either 'inline'
or 'external'."
                          valueFrom:
                            type: object
                            properties:
                              configMapKeyRef:
                                type: object
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                description: Reference to the key in the ConfigM
ap containing the configuration.
                            description: '`ConfigMap` entry where the logging co
nfiguration is stored. '
                        required:
                        - type
                        description: Logging configuration.
                      jvmOptions:
                        type: object
                        properties:
                          "-XX":
                            additionalProperties:
                              type: string
                            type: object
                            description: A map of -XX options to the JVM.
                          "-Xmx":
                            type: string
                            pattern: "^[0-9]+[mMgG]?$"
                            description: -Xmx option to to the JVM.
                          "-Xms":
                            type: string
                            pattern: "^[0-9]+[mMgG]?$"
                            description: -Xms option to to the JVM.
                          gcLoggingEnabled:
                            type: boolean
                            description: Specifies whether the Garbage Collectio
n logging is enabled. The default is false.
                          javaSystemProperties:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The system property name.
                                value:
                                  type: string
                                  description: The system property value.
                            description: A map of additional system properties w
hich will be passed using the `-D` option to the JVM.
                        description: JVM Options for pods.
                    description: Configuration of the User Operator.
                  tlsSidecar:
                    type: object
                    properties:
                      image:
                        type: string
                        description: The docker image for the container.
                      resources:
                        type: object
                        properties:
                          claims:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                request:
                                  type: string
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]
+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]
+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            type: object
                        description: CPU and memory resources to reserve.
                      livenessProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                            description: The initial delay before first the heal
th is first checked. Default to 15 seconds. Minimum value is 0.
                          timeoutSeconds:
                            type: integer
                            minimum: 1
                            description: The timeout for each attempted health c
heck. Default to 5 seconds. Minimum value is 1.
                          periodSeconds:
                            type: integer
                            minimum: 1
                            description: How often (in seconds) to perform the p
robe. Default to 10 seconds. Minimum value is 1.
                          successThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive successes for the p
robe to be considered successful after having failed. Defaults to 1. Must be 1 f
or liveness. Minimum value is 1.
                          failureThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive failures for the pr
obe to be considered failed after having succeeded. Defaults to 3. Minimum value
 is 1.
                        description: Pod liveness checking.
                      readinessProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                            description: The initial delay before first the heal
th is first checked. Default to 15 seconds. Minimum value is 0.
                          timeoutSeconds:
                            type: integer
                            minimum: 1
                            description: The timeout for each attempted health c
heck. Default to 5 seconds. Minimum value is 1.
                          periodSeconds:
                            type: integer
                            minimum: 1
                            description: How often (in seconds) to perform the p
robe. Default to 10 seconds. Minimum value is 1.
                          successThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive successes for the p
robe to be considered successful after having failed. Defaults to 1. Must be 1 f
or liveness. Minimum value is 1.
                          failureThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive failures for the pr
obe to be considered failed after having succeeded. Defaults to 3. Minimum value
 is 1.
                        description: Pod readiness checking.
                      logLevel:
                        type: string
                        enum:
                        - emerg
                        - alert
                        - crit
                        - err
                        - warning
                        - notice
                        - info
                        - debug
                        description: The log level for the TLS sidecar. Default
value is `notice`.
                    description: TLS sidecar configuration.
                  template:
                    type: object
                    properties:
                      deployment:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                          deploymentStrategy:
                            type: string
                            enum:
                            - RollingUpdate
                            - Recreate
                            description: Pod replacement strategy for deployment
 configuration changes. Valid values are `RollingUpdate` and `Recreate`. Default
s to `RollingUpdate`.
                        description: Template for Entity Operator `Deployment`.
                      pod:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                          imagePullSecrets:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                            description: "List of references to secrets in the s
ame namespace to use for pulling any of the images used by this Pod. When the `S
TRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `ima
gePullSecrets` option are specified, only the `imagePullSecrets` variable is use
d and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored."
                          securityContext:
                            type: object
                            properties:
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              fsGroup:
                                type: integer
                              fsGroupChangePolicy:
                                type: string
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxChangePolicy:
                                type: string
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              supplementalGroups:
                                type: array
                                items:
                                  type: integer
                              supplementalGroupsPolicy:
                                type: string
                              sysctls:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Configures pod-level security attribute
s and common container settings.
                          terminationGracePeriodSeconds:
                            type: integer
                            minimum: 0
                            description: "The grace period is the duration in se
conds after the processes running in the pod are sent a termination signal, and
the time when the processes are forcibly halted with a kill signal. Set this val
ue to longer than the expected cleanup time for your process. Value must be a no
n-negative integer. A zero value indicates delete immediately. You might need to
 increase the grace period for very large Kafka clusters, so that the Kafka brok
ers have enough time to transfer their work to another broker before they are te
rminated. Defaults to 30 seconds."
                          affinity:
                            type: object
                            properties:
                              nodeAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecutio
n:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        preference:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution
:
                                    type: object
                                    properties:
                                      nodeSelectorTerms:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                              podAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecutio
n:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution
:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                              podAntiAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecutio
n:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution
:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                            description: The pod's affinity rules.
                          tolerations:
                            type: array
                            items:
                              type: object
                              properties:
                                effect:
                                  type: string
                                key:
                                  type: string
                                operator:
                                  type: string
                                tolerationSeconds:
                                  type: integer
                                value:
                                  type: string
                            description: The pod's tolerations.
                          topologySpreadConstraints:
                            type: array
                            items:
                              type: object
                              properties:
                                labelSelector:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                matchLabelKeys:
                                  type: array
                                  items:
                                    type: string
                                maxSkew:
                                  type: integer
                                minDomains:
                                  type: integer
                                nodeAffinityPolicy:
                                  type: string
                                nodeTaintsPolicy:
                                  type: string
                                topologyKey:
                                  type: string
                                whenUnsatisfiable:
                                  type: string
                            description: The pod's topology spread constraints.
                          priorityClassName:
                            type: string
                            description: 'The name of the priority class used to
 assign priority to the pods. '
                          schedulerName:
                            type: string
                            description: "The name of the scheduler used to disp
atch this `Pod`. If not specified, the default scheduler will be used."
                          hostAliases:
                            type: array
                            items:
                              type: object
                              properties:
                                hostnames:
                                  type: array
                                  items:
                                    type: string
                                ip:
                                  type: string
                            description: The pod's HostAliases. HostAliases is a
n optional list of hosts and IPs that will be injected into the Pod's hosts file
 if specified.
                          dnsPolicy:
                            type: string
                            enum:
                            - ClusterFirst
                            - ClusterFirstWithHostNet
                            - Default
                            - None
                            description: "The pod's DNSPolicy. Defaults to `Clus
terFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default`
 or `None`."
                          dnsConfig:
                            type: object
                            properties:
                              nameservers:
                                type: array
                                items:
                                  type: string
                              options:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              searches:
                                type: array
                                items:
                                  type: string
                            description: "The pod's DNSConfig. If specified, it
will be merged to the generated DNS configuration based on the DNSPolicy."
                          enableServiceLinks:
                            type: boolean
                            description: Indicates whether information about ser
vices should be injected into Pod's environment variables.
                          tmpDirSizeLimit:
                            type: string
                            pattern: "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                            description: "Defines the total amount of pod memory
 allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in
 memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. T
he `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a h
igh value as it consumes pod memory resources."
                          volumes:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Name to use for the volume. Requi
red.
                                secret:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    optional:
                                      type: boolean
                                    secretName:
                                      type: string
                                  description: '`Secret` to use to populate the
volume.'
                                configMap:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  description: '`ConfigMap` to use to populate t
he volume.'
                                emptyDir:
                                  type: object
                                  properties:
                                    medium:
                                      type: string
                                    sizeLimit:
                                      type: object
                                      properties:
                                        amount:
                                          type: string
                                        format:
                                          type: string
                                  description: '`EmptyDir` to use to populate th
e volume.'
                                persistentVolumeClaim:
                                  type: object
                                  properties:
                                    claimName:
                                      type: string
                                    readOnly:
                                      type: boolean
                                  description: '`PersistentVolumeClaim` object t
o use to populate the volume.'
                                csi:
                                  type: object
                                  properties:
                                    driver:
                                      type: string
                                    fsType:
                                      type: string
                                    nodePublishSecretRef:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                    readOnly:
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  description: '`CSIVolumeSource` object to use
to populate the volume.'
                                image:
                                  type: object
                                  properties:
                                    pullPolicy:
                                      type: string
                                    reference:
                                      type: string
                                  description: '`ImageVolumeSource` object to us
e to populate the volume.'
                              oneOf:
                              - properties:
                                  secret: {}
                                  configMap: {}
                                  emptyDir: {}
                                  persistentVolumeClaim: {}
                                  csi: {}
                                  image: {}
                            description: Additional volumes that can be mounted
to the pod.
                        description: Template for Entity Operator `Pods`.
                      topicOperatorContainer:
                        type: object
                        properties:
                          env:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The environment variable key.
                                value:
                                  type: string
                                  description: The environment variable value.
                                valueFrom:
                                  type: object
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a secre
t.
                                    configMapKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a confi
g map.
                                  oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                    - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                    - configMapKeyRef
                                  description: Reference to the secret or config
 map property to which the environment variable is set.
                              oneOf:
                              - properties:
                                  value: {}
                                required:
                                - value
                              - properties:
                                  valueFrom: {}
                                required:
                                - valueFrom
                            description: Environment variables which should be a
pplied to the container.
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Security context for the container.
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                recursiveReadOnly:
                                  type: string
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                            description: Additional volume mounts which should b
e applied to the container.
                        description: Template for the Entity Topic Operator cont
ainer.
                      userOperatorContainer:
                        type: object
                        properties:
                          env:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The environment variable key.
                                value:
                                  type: string
                                  description: The environment variable value.
                                valueFrom:
                                  type: object
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a secre
t.
                                    configMapKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a confi
g map.
                                  oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                    - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                    - configMapKeyRef
                                  description: Reference to the secret or config
 map property to which the environment variable is set.
                              oneOf:
                              - properties:
                                  value: {}
                                required:
                                - value
                              - properties:
                                  valueFrom: {}
                                required:
                                - valueFrom
                            description: Environment variables which should be a
pplied to the container.
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Security context for the container.
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                recursiveReadOnly:
                                  type: string
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                            description: Additional volume mounts which should b
e applied to the container.
                        description: Template for the Entity User Operator conta
iner.
                      tlsSidecarContainer:
                        type: object
                        properties:
                          env:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The environment variable key.
                                value:
                                  type: string
                                  description: The environment variable value.
                                valueFrom:
                                  type: object
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a secre
t.
                                    configMapKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a confi
g map.
                                  oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                    - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                    - configMapKeyRef
                                  description: Reference to the secret or config
 map property to which the environment variable is set.
                              oneOf:
                              - properties:
                                  value: {}
                                required:
                                - value
                              - properties:
                                  valueFrom: {}
                                required:
                                - valueFrom
                            description: Environment variables which should be a
pplied to the container.
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Security context for the container.
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                recursiveReadOnly:
                                  type: string
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                            description: Additional volume mounts which should b
e applied to the container.
                        description: Template for the Entity Operator TLS sideca
r container.
                      serviceAccount:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                        description: Template for the Entity Operator service ac
count.
                      entityOperatorRole:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                        description: Template for the Entity Operator Role.
                      topicOperatorRoleBinding:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                        description: Template for the Entity Topic Operator Role
Binding.
                      userOperatorRoleBinding:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                        description: Template for the Entity Topic Operator Role
Binding.
                    description: Template for Entity Operator resources. The tem
plate allows users to specify how a `Deployment` and `Pod` is generated.
                description: Configuration of the Entity Operator.
              clusterCa:
                type: object
                properties:
                  generateCertificateAuthority:
                    type: boolean
                    description: If true then Certificate Authority certificates
 will be generated automatically. Otherwise the user will need to provide a Secr
et with the CA certificate. Default is true.
                  generateSecretOwnerReference:
                    type: boolean
                    description: "If `true`, the Cluster and Client CA Secrets a
re configured with the `ownerReference` set to the `Kafka` resource. If the `Kaf
ka` resource is deleted when `true`, the CA Secrets are also deleted. If `false`
, the `ownerReference` is disabled. If the `Kafka` resource is deleted when `fal
se`, the CA Secrets are retained and available for reuse. Default is `true`."
                  validityDays:
                    type: integer
                    minimum: 1
                    description: The number of days generated certificates shoul
d be valid for. The default is 365.
                  renewalDays:
                    type: integer
                    minimum: 1
                    description: "The number of days in the certificate renewal
period. This is the number of days before the a certificate expires during which
 renewal actions may be performed. When `generateCertificateAuthority` is true,
this will cause the generation of a new certificate. When `generateCertificateAu
thority` is true, this will cause extra logging at WARN level about the pending
certificate expiry. Default is 30."
                  certificateExpirationPolicy:
                    type: string
                    enum:
                    - renew-certificate
                    - replace-key
                    description: How should CA certificate expiration be handled
 when `generateCertificateAuthority=true`. The default is for a new CA certifica
te to be generated reusing the existing private key.
                description: Configuration of the cluster certificate authority.
              clientsCa:
                type: object
                properties:
                  generateCertificateAuthority:
                    type: boolean
                    description: If true then Certificate Authority certificates
 will be generated automatically. Otherwise the user will need to provide a Secr
et with the CA certificate. Default is true.
                  generateSecretOwnerReference:
                    type: boolean
                    description: "If `true`, the Cluster and Client CA Secrets a
re configured with the `ownerReference` set to the `Kafka` resource. If the `Kaf
ka` resource is deleted when `true`, the CA Secrets are also deleted. If `false`
, the `ownerReference` is disabled. If the `Kafka` resource is deleted when `fal
se`, the CA Secrets are retained and available for reuse. Default is `true`."
                  validityDays:
                    type: integer
                    minimum: 1
                    description: The number of days generated certificates shoul
d be valid for. The default is 365.
                  renewalDays:
                    type: integer
                    minimum: 1
                    description: "The number of days in the certificate renewal
period. This is the number of days before the a certificate expires during which
 renewal actions may be performed. When `generateCertificateAuthority` is true,
this will cause the generation of a new certificate. When `generateCertificateAu
thority` is true, this will cause extra logging at WARN level about the pending
certificate expiry. Default is 30."
                  certificateExpirationPolicy:
                    type: string
                    enum:
                    - renew-certificate
                    - replace-key
                    description: How should CA certificate expiration be handled
 when `generateCertificateAuthority=true`. The default is for a new CA certifica
te to be generated reusing the existing private key.
                description: Configuration of the clients certificate authority.
              cruiseControl:
                type: object
                properties:
                  image:
                    type: string
                    description: "The container image used for Cruise Control po
ds. If no image name is explicitly specified, the image name corresponds to the
name specified in the Cluster Operator configuration. If an image name is not de
fined in the Cluster Operator configuration, a default value is used."
                  tlsSidecar:
                    type: object
                    properties:
                      image:
                        type: string
                        description: The docker image for the container.
                      resources:
                        type: object
                        properties:
                          claims:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                request:
                                  type: string
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]
+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]
+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            type: object
                        description: CPU and memory resources to reserve.
                      livenessProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                            description: The initial delay before first the heal
th is first checked. Default to 15 seconds. Minimum value is 0.
                          timeoutSeconds:
                            type: integer
                            minimum: 1
                            description: The timeout for each attempted health c
heck. Default to 5 seconds. Minimum value is 1.
                          periodSeconds:
                            type: integer
                            minimum: 1
                            description: How often (in seconds) to perform the p
robe. Default to 10 seconds. Minimum value is 1.
                          successThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive successes for the p
robe to be considered successful after having failed. Defaults to 1. Must be 1 f
or liveness. Minimum value is 1.
                          failureThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive failures for the pr
obe to be considered failed after having succeeded. Defaults to 3. Minimum value
 is 1.
                        description: Pod liveness checking.
                      readinessProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                            description: The initial delay before first the heal
th is first checked. Default to 15 seconds. Minimum value is 0.
                          timeoutSeconds:
                            type: integer
                            minimum: 1
                            description: The timeout for each attempted health c
heck. Default to 5 seconds. Minimum value is 1.
                          periodSeconds:
                            type: integer
                            minimum: 1
                            description: How often (in seconds) to perform the p
robe. Default to 10 seconds. Minimum value is 1.
                          successThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive successes for the p
robe to be considered successful after having failed. Defaults to 1. Must be 1 f
or liveness. Minimum value is 1.
                          failureThreshold:
                            type: integer
                            minimum: 1
                            description: Minimum consecutive failures for the pr
obe to be considered failed after having succeeded. Defaults to 3. Minimum value
 is 1.
                        description: Pod readiness checking.
                      logLevel:
                        type: string
                        enum:
                        - emerg
                        - alert
                        - crit
                        - err
                        - warning
                        - notice
                        - info
                        - debug
                        description: The log level for the TLS sidecar. Default
value is `notice`.
                    description: TLS sidecar configuration.
                  resources:
                    type: object
                    properties:
                      claims:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            request:
                              type: string
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(
([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          x-kubernetes-int-or-string: true
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(
([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          x-kubernetes-int-or-string: true
                        type: object
                    description: CPU and memory resources to reserve for the Cru
ise Control container.
                  livenessProbe:
                    type: object
                    properties:
                      initialDelaySeconds:
                        type: integer
                        minimum: 0
                        description: The initial delay before first the health i
s first checked. Default to 15 seconds. Minimum value is 0.
                      timeoutSeconds:
                        type: integer
                        minimum: 1
                        description: The timeout for each attempted health check
. Default to 5 seconds. Minimum value is 1.
                      periodSeconds:
                        type: integer
                        minimum: 1
                        description: How often (in seconds) to perform the probe
. Default to 10 seconds. Minimum value is 1.
                      successThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive successes for the probe
 to be considered successful after having failed. Defaults to 1. Must be 1 for l
iveness. Minimum value is 1.
                      failureThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive failures for the probe
to be considered failed after having succeeded. Defaults to 3. Minimum value is
1.
                    description: Pod liveness checking for the Cruise Control co
ntainer.
                  readinessProbe:
                    type: object
                    properties:
                      initialDelaySeconds:
                        type: integer
                        minimum: 0
                        description: The initial delay before first the health i
s first checked. Default to 15 seconds. Minimum value is 0.
                      timeoutSeconds:
                        type: integer
                        minimum: 1
                        description: The timeout for each attempted health check
. Default to 5 seconds. Minimum value is 1.
                      periodSeconds:
                        type: integer
                        minimum: 1
                        description: How often (in seconds) to perform the probe
. Default to 10 seconds. Minimum value is 1.
                      successThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive successes for the probe
 to be considered successful after having failed. Defaults to 1. Must be 1 for l
iveness. Minimum value is 1.
                      failureThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive failures for the probe
to be considered failed after having succeeded. Defaults to 3. Minimum value is
1.
                    description: Pod readiness checking for the Cruise Control c
ontainer.
                  jvmOptions:
                    type: object
                    properties:
                      "-XX":
                        additionalProperties:
                          type: string
                        type: object
                        description: A map of -XX options to the JVM.
                      "-Xmx":
                        type: string
                        pattern: "^[0-9]+[mMgG]?$"
                        description: -Xmx option to to the JVM.
                      "-Xms":
                        type: string
                        pattern: "^[0-9]+[mMgG]?$"
                        description: -Xms option to to the JVM.
                      gcLoggingEnabled:
                        type: boolean
                        description: Specifies whether the Garbage Collection lo
gging is enabled. The default is false.
                      javaSystemProperties:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: The system property name.
                            value:
                              type: string
                              description: The system property value.
                        description: A map of additional system properties which
 will be passed using the `-D` option to the JVM.
                    description: JVM Options for the Cruise Control container.
                  logging:
                    type: object
                    properties:
                      loggers:
                        additionalProperties:
                          type: string
                        type: object
                        description: A Map from logger name to logger level.
                      type:
                        type: string
                        enum:
                        - inline
                        - external
                        description: "Logging type, must be either 'inline' or '
external'."
                      valueFrom:
                        type: object
                        properties:
                          configMapKeyRef:
                            type: object
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                              optional:
                                type: boolean
                            description: Reference to the key in the ConfigMap c
ontaining the configuration.
                        description: '`ConfigMap` entry where the logging config
uration is stored. '
                    required:
                    - type
                    description: Logging configuration (Log4j 2) for Cruise Cont
rol.
                  template:
                    type: object
                    properties:
                      deployment:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                          deploymentStrategy:
                            type: string
                            enum:
                            - RollingUpdate
                            - Recreate
                            description: Pod replacement strategy for deployment
 configuration changes. Valid values are `RollingUpdate` and `Recreate`. Default
s to `RollingUpdate`.
                        description: Template for Cruise Control `Deployment`.
                      pod:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                          imagePullSecrets:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                            description: "List of references to secrets in the s
ame namespace to use for pulling any of the images used by this Pod. When the `S
TRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `ima
gePullSecrets` option are specified, only the `imagePullSecrets` variable is use
d and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored."
                          securityContext:
                            type: object
                            properties:
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              fsGroup:
                                type: integer
                              fsGroupChangePolicy:
                                type: string
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxChangePolicy:
                                type: string
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              supplementalGroups:
                                type: array
                                items:
                                  type: integer
                              supplementalGroupsPolicy:
                                type: string
                              sysctls:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Configures pod-level security attribute
s and common container settings.
                          terminationGracePeriodSeconds:
                            type: integer
                            minimum: 0
                            description: "The grace period is the duration in se
conds after the processes running in the pod are sent a termination signal, and
the time when the processes are forcibly halted with a kill signal. Set this val
ue to longer than the expected cleanup time for your process. Value must be a no
n-negative integer. A zero value indicates delete immediately. You might need to
 increase the grace period for very large Kafka clusters, so that the Kafka brok
ers have enough time to transfer their work to another broker before they are te
rminated. Defaults to 30 seconds."
                          affinity:
                            type: object
                            properties:
                              nodeAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecutio
n:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        preference:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution
:
                                    type: object
                                    properties:
                                      nodeSelectorTerms:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                              podAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecutio
n:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution
:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                              podAntiAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecutio
n:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution
:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                            description: The pod's affinity rules.
                          tolerations:
                            type: array
                            items:
                              type: object
                              properties:
                                effect:
                                  type: string
                                key:
                                  type: string
                                operator:
                                  type: string
                                tolerationSeconds:
                                  type: integer
                                value:
                                  type: string
                            description: The pod's tolerations.
                          topologySpreadConstraints:
                            type: array
                            items:
                              type: object
                              properties:
                                labelSelector:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                matchLabelKeys:
                                  type: array
                                  items:
                                    type: string
                                maxSkew:
                                  type: integer
                                minDomains:
                                  type: integer
                                nodeAffinityPolicy:
                                  type: string
                                nodeTaintsPolicy:
                                  type: string
                                topologyKey:
                                  type: string
                                whenUnsatisfiable:
                                  type: string
                            description: The pod's topology spread constraints.
                          priorityClassName:
                            type: string
                            description: 'The name of the priority class used to
 assign priority to the pods. '
                          schedulerName:
                            type: string
                            description: "The name of the scheduler used to disp
atch this `Pod`. If not specified, the default scheduler will be used."
                          hostAliases:
                            type: array
                            items:
                              type: object
                              properties:
                                hostnames:
                                  type: array
                                  items:
                                    type: string
                                ip:
                                  type: string
                            description: The pod's HostAliases. HostAliases is a
n optional list of hosts and IPs that will be injected into the Pod's hosts file
 if specified.
                          dnsPolicy:
                            type: string
                            enum:
                            - ClusterFirst
                            - ClusterFirstWithHostNet
                            - Default
                            - None
                            description: "The pod's DNSPolicy. Defaults to `Clus
terFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default`
 or `None`."
                          dnsConfig:
                            type: object
                            properties:
                              nameservers:
                                type: array
                                items:
                                  type: string
                              options:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              searches:
                                type: array
                                items:
                                  type: string
                            description: "The pod's DNSConfig. If specified, it
will be merged to the generated DNS configuration based on the DNSPolicy."
                          enableServiceLinks:
                            type: boolean
                            description: Indicates whether information about ser
vices should be injected into Pod's environment variables.
                          tmpDirSizeLimit:
                            type: string
                            pattern: "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                            description: "Defines the total amount of pod memory
 allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in
 memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. T
he `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a h
igh value as it consumes pod memory resources."
                          volumes:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Name to use for the volume. Requi
red.
                                secret:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    optional:
                                      type: boolean
                                    secretName:
                                      type: string
                                  description: '`Secret` to use to populate the
volume.'
                                configMap:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  description: '`ConfigMap` to use to populate t
he volume.'
                                emptyDir:
                                  type: object
                                  properties:
                                    medium:
                                      type: string
                                    sizeLimit:
                                      type: object
                                      properties:
                                        amount:
                                          type: string
                                        format:
                                          type: string
                                  description: '`EmptyDir` to use to populate th
e volume.'
                                persistentVolumeClaim:
                                  type: object
                                  properties:
                                    claimName:
                                      type: string
                                    readOnly:
                                      type: boolean
                                  description: '`PersistentVolumeClaim` object t
o use to populate the volume.'
                                csi:
                                  type: object
                                  properties:
                                    driver:
                                      type: string
                                    fsType:
                                      type: string
                                    nodePublishSecretRef:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                    readOnly:
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  description: '`CSIVolumeSource` object to use
to populate the volume.'
                                image:
                                  type: object
                                  properties:
                                    pullPolicy:
                                      type: string
                                    reference:
                                      type: string
                                  description: '`ImageVolumeSource` object to us
e to populate the volume.'
                              oneOf:
                              - properties:
                                  secret: {}
                                  configMap: {}
                                  emptyDir: {}
                                  persistentVolumeClaim: {}
                                  csi: {}
                                  image: {}
                            description: Additional volumes that can be mounted
to the pod.
                        description: Template for Cruise Control `Pods`.
                      apiService:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                          ipFamilyPolicy:
                            type: string
                            enum:
                            - SingleStack
                            - PreferDualStack
                            - RequireDualStack
                            description: "Specifies the IP Family Policy used by
 the service. Available options are `SingleStack`, `PreferDualStack` and `Requir
eDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for t
wo IP families on dual-stack configured clusters or a single IP family on single
-stack clusters. `RequireDualStack` fails unless there are two IP families on du
al-stack configured clusters. If unspecified, Kubernetes will choose the default
 value based on the service type."
                          ipFamilies:
                            type: array
                            items:
                              type: string
                              enum:
                              - IPv4
                              - IPv6
                            description: "Specifies the IP Families used by the
service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes wil
l choose the default value based on the `ipFamilyPolicy` setting."
                        description: Template for Cruise Control API `Service`.
                      podDisruptionBudget:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata to apply to the `PodDisruption
BudgetTemplate` resource.
                          maxUnavailable:
                            type: integer
                            minimum: 0
                            description: "Maximum number of unavailable pods to
allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable
` number of pods or fewer are unavailable after the eviction. Setting this value
 to 0 prevents all voluntary evictions, so the pods must be evicted manually. De
faults to 1."
                        description: Template for Cruise Control `PodDisruptionB
udget`.
                      cruiseControlContainer:
                        type: object
                        properties:
                          env:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The environment variable key.
                                value:
                                  type: string
                                  description: The environment variable value.
                                valueFrom:
                                  type: object
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a secre
t.
                                    configMapKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a confi
g map.
                                  oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                    - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                    - configMapKeyRef
                                  description: Reference to the secret or config
 map property to which the environment variable is set.
                              oneOf:
                              - properties:
                                  value: {}
                                required:
                                - value
                              - properties:
                                  valueFrom: {}
                                required:
                                - valueFrom
                            description: Environment variables which should be a
pplied to the container.
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Security context for the container.
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                recursiveReadOnly:
                                  type: string
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                            description: Additional volume mounts which should b
e applied to the container.
                        description: Template for the Cruise Control container.
                      tlsSidecarContainer:
                        type: object
                        properties:
                          env:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The environment variable key.
                                value:
                                  type: string
                                  description: The environment variable value.
                                valueFrom:
                                  type: object
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a secre
t.
                                    configMapKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a confi
g map.
                                  oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                    - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                    - configMapKeyRef
                                  description: Reference to the secret or config
 map property to which the environment variable is set.
                              oneOf:
                              - properties:
                                  value: {}
                                required:
                                - value
                              - properties:
                                  valueFrom: {}
                                required:
                                - valueFrom
                            description: Environment variables which should be a
pplied to the container.
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Security context for the container.
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                recursiveReadOnly:
                                  type: string
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                            description: Additional volume mounts which should b
e applied to the container.
                        description: Template for the Cruise Control TLS sidecar
 container.
                      serviceAccount:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                        description: Template for the Cruise Control service acc
ount.
                    description: "Template to specify how Cruise Control resourc
es, `Deployments` and `Pods`, are generated."
                  brokerCapacity:
                    type: object
                    properties:
                      disk:
                        type: string
                        pattern: "^[0-9]+([.][0-9]*)?([KMGTPE]i?|e[0-9]+)?$"
                        description: "Broker capacity for disk in bytes. Use a n
umber value with either standard Kubernetes byte units (K, M, G, or T), their bi
byte (power of two) equivalents (Ki, Mi, Gi, or Ti), or a byte value with or wit
hout E notation. For example, 100000M, 100000Mi, 104857600000, or 1e+11."
                      cpuUtilization:
                        type: integer
                        minimum: 0
                        maximum: 100
                        description: Broker capacity for CPU resource utilizatio
n as a percentage (0 - 100).
                      cpu:
                        type: string
                        pattern: "^[0-9]+([.][0-9]{0,3}|[m]?)$"
                        description: "Broker capacity for CPU resource in cores
or millicores. For example, 1, 1.500, 1500m. For more information on valid CPU r
esource units see https://kubernetes.io/docs/concepts/configuration/manage-resou
rces-containers/#meaning-of-cpu."
                      inboundNetwork:
                        type: string
                        pattern: "^[0-9]+([KMG]i?)?B/s$"
                        description: "Broker capacity for inbound network throug
hput in bytes per second. Use an integer value with standard Kubernetes byte uni
ts (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second.
 For example, 10000KiB/s."
                      outboundNetwork:
                        type: string
                        pattern: "^[0-9]+([KMG]i?)?B/s$"
                        description: "Broker capacity for outbound network throu
ghput in bytes per second. Use an integer value with standard Kubernetes byte un
its (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second
. For example, 10000KiB/s."
                      overrides:
                        type: array
                        items:
                          type: object
                          properties:
                            brokers:
                              type: array
                              items:
                                type: integer
                              description: List of Kafka brokers (broker identif
iers).
                            cpu:
                              type: string
                              pattern: "^[0-9]+([.][0-9]{0,3}|[m]?)$"
                              description: "Broker capacity for CPU resource in
cores or millicores. For example, 1, 1.500, 1500m. For more information on valid
 CPU resource units see https://kubernetes.io/docs/concepts/configuration/manage
-resources-containers/#meaning-of-cpu."
                            inboundNetwork:
                              type: string
                              pattern: "^[0-9]+([KMG]i?)?B/s$"
                              description: "Broker capacity for inbound network
throughput in bytes per second. Use an integer value with standard Kubernetes by
te units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per s
econd. For example, 10000KiB/s."
                            outboundNetwork:
                              type: string
                              pattern: "^[0-9]+([KMG]i?)?B/s$"
                              description: "Broker capacity for outbound network
 throughput in bytes per second. Use an integer value with standard Kubernetes b
yte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per
second. For example, 10000KiB/s."
                          required:
                          - brokers
                        description: Overrides for individual brokers. The `over
rides` property lets you specify a different capacity configuration for differen
t brokers.
                    description: The Cruise Control `brokerCapacity` configurati
on.
                  config:
                    x-kubernetes-preserve-unknown-fields: true
                    type: object
                    description: "The Cruise Control configuration. For a full l
ist of configuration options refer to https://github.com/linkedin/cruise-control
/wiki/Configurations. Note that properties with the following prefixes cannot be
 set: bootstrap.servers, client.id, zookeeper., network., security., failed.brok
ers.zk.path,webserver.http., webserver.api.urlprefix, webserver.session.path, we
bserver.accesslog., two.step., request.reason.required,metric.reporter.sampler.b
ootstrap.servers, capacity.config.file, self.healing., ssl., kafka.broker.failur
e.detection.enable, topic.config.provider.class (with the exception of: ssl.ciph
er.suites, ssl.protocol, ssl.enabled.protocols, webserver.http.cors.enabled, web
server.http.cors.origin, webserver.http.cors.exposeheaders, webserver.security.e
nable, webserver.ssl.enable)."
                  metricsConfig:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                        - jmxPrometheusExporter
                        - strimziMetricsReporter
                        description: Metrics type. The supported types are `jmxP
rometheusExporter` and `strimziMetricsReporter`. Type `jmxPrometheusExporter` us
es the Prometheus JMX Exporter to expose Kafka JMX metrics in Prometheus format
through an HTTP endpoint. Type `strimziMetricsReporter` uses the Strimzi Metrics
 Reporter to directly expose Kafka metrics in Prometheus format through an HTTP
endpoint.
                      valueFrom:
                        type: object
                        properties:
                          configMapKeyRef:
                            type: object
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                              optional:
                                type: boolean
                            description: Reference to the key in the ConfigMap c
ontaining the configuration.
                        description: ConfigMap entry where the Prometheus JMX Ex
porter configuration is stored.
                      values:
                        type: object
                        properties:
                          allowList:
                            type: array
                            items:
                              type: string
                            description: A list of regex patterns to filter the
metrics to collect. Should contain at least one element.
                        description: Configuration values for the Strimzi Metric
s Reporter.
                    required:
                    - type
                    description: "Metrics configuration. Only `jmxPrometheusExpo
rter` can be configured, as this component does not support `strimziMetricsRepor
ter`."
                    x-kubernetes-validations:
                    - rule: self.type != 'jmxPrometheusExporter' || has(self.val
ueFrom)
                      message: valueFrom property is required
                    - rule: self.type != 'strimziMetricsReporter'
                      message: value type not supported
                  apiUsers:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                        - hashLoginService
                        description: "Type of the Cruise Control API users confi
guration. Supported format is: `hashLoginService`."
                      valueFrom:
                        type: object
                        properties:
                          secretKeyRef:
                            type: object
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                              optional:
                                type: boolean
                            description: Selects a key of a Secret in the resour
ce's namespace.
                        description: Secret from which the custom Cruise Control
 API authentication credentials are read.
                    required:
                    - type
                    - valueFrom
                    description: Configuration of the Cruise Control REST API us
ers.
                  autoRebalance:
                    type: array
                    minItems: 1
                    items:
                      type: object
                      properties:
                        mode:
                          type: string
                          enum:
                          - add-brokers
                          - remove-brokers
                          description: "Specifies the mode for automatically reb
alancing when brokers are added or removed. Supported modes are `add-brokers` an
d `remove-brokers`. \n"
                        template:
                          type: object
                          properties:
                            name:
                              type: string
                          description: Reference to the KafkaRebalance custom re
source to be used as the configuration template for the auto-rebalancing on scal
ing when running for the corresponding mode.
                      required:
                      - mode
                    description: "Auto-rebalancing on scaling related configurat
ion listing the modes, when brokers are added or removed, with the corresponding
 rebalance template configurations.If this field is set, at least one mode has t
o be defined."
                description: Configuration for Cruise Control deployment. Deploy
s a Cruise Control instance when specified.
              jmxTrans:
                type: object
                properties:
                  image:
                    type: string
                    description: The image to use for the JmxTrans.
                  outputDefinitions:
                    type: array
                    items:
                      type: object
                      properties:
                        outputType:
                          type: string
                          description: "Template for setting the format of the d
ata that will be pushed.For more information see https://github.com/jmxtrans/jmx
trans/wiki/OutputWriters[JmxTrans OutputWriters]."
                        host:
                          type: string
                          description: The DNS/hostname of the remote host that
the data is pushed to.
                        port:
                          type: integer
                          description: The port of the remote host that the data
 is pushed to.
                        flushDelayInSeconds:
                          type: integer
                          description: How many seconds the JmxTrans waits befor
e pushing a new set of data out.
                        typeNames:
                          type: array
                          items:
                            type: string
                          description: "Template for filtering data to be includ
ed in response to a wildcard query. For more information see https://github.com/
jmxtrans/jmxtrans/wiki/Queries[JmxTrans queries]."
                        name:
                          type: string
                          description: Template for setting the name of the outp
ut definition. This is used to identify where to send the results of queries sho
uld be sent.
                      required:
                      - outputType
                      - name
                    description: "Defines the output hosts that will be referenc
ed later on. For more information on these properties see, xref:type-JmxTransOut
putDefinitionTemplate-reference[`JmxTransOutputDefinitionTemplate` schema refere
nce]."
                  logLevel:
                    type: string
                    description: "Sets the logging level of the JmxTrans deploym
ent.For more information see, https://github.com/jmxtrans/jmxtrans-agent/wiki/Tr
oubleshooting[JmxTrans Logging Level]."
                  kafkaQueries:
                    type: array
                    items:
                      type: object
                      properties:
                        targetMBean:
                          type: string
                          description: If using wildcards instead of a specific
MBean then the data is gathered from multiple MBeans. Otherwise if specifying an
 MBean then data is gathered from that specified MBean.
                        attributes:
                          type: array
                          items:
                            type: string
                          description: Determine which attributes of the targete
d MBean should be included.
                        outputs:
                          type: array
                          items:
                            type: string
                          description: "List of the names of output definitions
specified in the spec.kafka.jmxTrans.outputDefinitions that have defined where J
MX metrics are pushed to, and in which data format."
                      required:
                      - targetMBean
                      - attributes
                      - outputs
                    description: "Queries to send to the Kafka brokers to define
 what data should be read from each broker. For more information on these proper
ties see, xref:type-JmxTransQueryTemplate-reference[`JmxTransQueryTemplate` sche
ma reference]."
                  resources:
                    type: object
                    properties:
                      claims:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            request:
                              type: string
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(
([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          x-kubernetes-int-or-string: true
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(
([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          x-kubernetes-int-or-string: true
                        type: object
                    description: CPU and memory resources to reserve.
                  template:
                    type: object
                    properties:
                      deployment:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                          deploymentStrategy:
                            type: string
                            enum:
                            - RollingUpdate
                            - Recreate
                            description: Pod replacement strategy for deployment
 configuration changes. Valid values are `RollingUpdate` and `Recreate`. Default
s to `RollingUpdate`.
                        description: Template for JmxTrans `Deployment`.
                      pod:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                          imagePullSecrets:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                            description: "List of references to secrets in the s
ame namespace to use for pulling any of the images used by this Pod. When the `S
TRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `ima
gePullSecrets` option are specified, only the `imagePullSecrets` variable is use
d and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored."
                          securityContext:
                            type: object
                            properties:
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              fsGroup:
                                type: integer
                              fsGroupChangePolicy:
                                type: string
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxChangePolicy:
                                type: string
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              supplementalGroups:
                                type: array
                                items:
                                  type: integer
                              supplementalGroupsPolicy:
                                type: string
                              sysctls:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Configures pod-level security attribute
s and common container settings.
                          terminationGracePeriodSeconds:
                            type: integer
                            minimum: 0
                            description: "The grace period is the duration in se
conds after the processes running in the pod are sent a termination signal, and
the time when the processes are forcibly halted with a kill signal. Set this val
ue to longer than the expected cleanup time for your process. Value must be a no
n-negative integer. A zero value indicates delete immediately. You might need to
 increase the grace period for very large Kafka clusters, so that the Kafka brok
ers have enough time to transfer their work to another broker before they are te
rminated. Defaults to 30 seconds."
                          affinity:
                            type: object
                            properties:
                              nodeAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecutio
n:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        preference:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution
:
                                    type: object
                                    properties:
                                      nodeSelectorTerms:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                              podAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecutio
n:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution
:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                              podAntiAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecutio
n:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution
:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                            description: The pod's affinity rules.
                          tolerations:
                            type: array
                            items:
                              type: object
                              properties:
                                effect:
                                  type: string
                                key:
                                  type: string
                                operator:
                                  type: string
                                tolerationSeconds:
                                  type: integer
                                value:
                                  type: string
                            description: The pod's tolerations.
                          topologySpreadConstraints:
                            type: array
                            items:
                              type: object
                              properties:
                                labelSelector:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                matchLabelKeys:
                                  type: array
                                  items:
                                    type: string
                                maxSkew:
                                  type: integer
                                minDomains:
                                  type: integer
                                nodeAffinityPolicy:
                                  type: string
                                nodeTaintsPolicy:
                                  type: string
                                topologyKey:
                                  type: string
                                whenUnsatisfiable:
                                  type: string
                            description: The pod's topology spread constraints.
                          priorityClassName:
                            type: string
                            description: 'The name of the priority class used to
 assign priority to the pods. '
                          schedulerName:
                            type: string
                            description: "The name of the scheduler used to disp
atch this `Pod`. If not specified, the default scheduler will be used."
                          hostAliases:
                            type: array
                            items:
                              type: object
                              properties:
                                hostnames:
                                  type: array
                                  items:
                                    type: string
                                ip:
                                  type: string
                            description: The pod's HostAliases. HostAliases is a
n optional list of hosts and IPs that will be injected into the Pod's hosts file
 if specified.
                          dnsPolicy:
                            type: string
                            enum:
                            - ClusterFirst
                            - ClusterFirstWithHostNet
                            - Default
                            - None
                            description: "The pod's DNSPolicy. Defaults to `Clus
terFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default`
 or `None`."
                          dnsConfig:
                            type: object
                            properties:
                              nameservers:
                                type: array
                                items:
                                  type: string
                              options:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              searches:
                                type: array
                                items:
                                  type: string
                            description: "The pod's DNSConfig. If specified, it
will be merged to the generated DNS configuration based on the DNSPolicy."
                          enableServiceLinks:
                            type: boolean
                            description: Indicates whether information about ser
vices should be injected into Pod's environment variables.
                          tmpDirSizeLimit:
                            type: string
                            pattern: "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                            description: "Defines the total amount of pod memory
 allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in
 memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. T
he `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a h
igh value as it consumes pod memory resources."
                          volumes:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Name to use for the volume. Requi
red.
                                secret:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    optional:
                                      type: boolean
                                    secretName:
                                      type: string
                                  description: '`Secret` to use to populate the
volume.'
                                configMap:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  description: '`ConfigMap` to use to populate t
he volume.'
                                emptyDir:
                                  type: object
                                  properties:
                                    medium:
                                      type: string
                                    sizeLimit:
                                      type: object
                                      properties:
                                        amount:
                                          type: string
                                        format:
                                          type: string
                                  description: '`EmptyDir` to use to populate th
e volume.'
                                persistentVolumeClaim:
                                  type: object
                                  properties:
                                    claimName:
                                      type: string
                                    readOnly:
                                      type: boolean
                                  description: '`PersistentVolumeClaim` object t
o use to populate the volume.'
                                csi:
                                  type: object
                                  properties:
                                    driver:
                                      type: string
                                    fsType:
                                      type: string
                                    nodePublishSecretRef:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                    readOnly:
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  description: '`CSIVolumeSource` object to use
to populate the volume.'
                                image:
                                  type: object
                                  properties:
                                    pullPolicy:
                                      type: string
                                    reference:
                                      type: string
                                  description: '`ImageVolumeSource` object to us
e to populate the volume.'
                              oneOf:
                              - properties:
                                  secret: {}
                                  configMap: {}
                                  emptyDir: {}
                                  persistentVolumeClaim: {}
                                  csi: {}
                                  image: {}
                            description: Additional volumes that can be mounted
to the pod.
                        description: Template for JmxTrans `Pods`.
                      container:
                        type: object
                        properties:
                          env:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The environment variable key.
                                value:
                                  type: string
                                  description: The environment variable value.
                                valueFrom:
                                  type: object
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a secre
t.
                                    configMapKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a confi
g map.
                                  oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                    - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                    - configMapKeyRef
                                  description: Reference to the secret or config
 map property to which the environment variable is set.
                              oneOf:
                              - properties:
                                  value: {}
                                required:
                                - value
                              - properties:
                                  valueFrom: {}
                                required:
                                - valueFrom
                            description: Environment variables which should be a
pplied to the container.
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Security context for the container.
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                recursiveReadOnly:
                                  type: string
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                            description: Additional volume mounts which should b
e applied to the container.
                        description: Template for JmxTrans container.
                      serviceAccount:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                        description: Template for the JmxTrans service account.
                    description: Template for JmxTrans resources.
                required:
                - outputDefinitions
                - kafkaQueries
                description: "As of Strimzi 0.35.0, JmxTrans is not supported an
ymore and this option is ignored."
              kafkaExporter:
                type: object
                properties:
                  image:
                    type: string
                    description: "The container image used for the Kafka Exporte
r pods. If no image name is explicitly specified, the image name corresponds to
the version specified in the Cluster Operator configuration. If an image name is
 not defined in the Cluster Operator configuration, a default value is used."
                  groupRegex:
                    type: string
                    description: Regular expression to specify which consumer gr
oups to collect. Default value is `.*`.
                  topicRegex:
                    type: string
                    description: Regular expression to specify which topics to c
ollect. Default value is `.*`.
                  groupExcludeRegex:
                    type: string
                    description: Regular expression to specify which consumer gr
oups to exclude.
                  topicExcludeRegex:
                    type: string
                    description: Regular expression to specify which topics to e
xclude.
                  resources:
                    type: object
                    properties:
                      claims:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            request:
                              type: string
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(
([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          x-kubernetes-int-or-string: true
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(
([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          x-kubernetes-int-or-string: true
                        type: object
                    description: CPU and memory resources to reserve.
                  logging:
                    type: string
                    description: "Only log messages with the given severity or a
bove. Valid levels: [`info`, `debug`, `trace`]. Default log level is `info`."
                  livenessProbe:
                    type: object
                    properties:
                      initialDelaySeconds:
                        type: integer
                        minimum: 0
                        description: The initial delay before first the health i
s first checked. Default to 15 seconds. Minimum value is 0.
                      timeoutSeconds:
                        type: integer
                        minimum: 1
                        description: The timeout for each attempted health check
. Default to 5 seconds. Minimum value is 1.
                      periodSeconds:
                        type: integer
                        minimum: 1
                        description: How often (in seconds) to perform the probe
. Default to 10 seconds. Minimum value is 1.
                      successThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive successes for the probe
 to be considered successful after having failed. Defaults to 1. Must be 1 for l
iveness. Minimum value is 1.
                      failureThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive failures for the probe
to be considered failed after having succeeded. Defaults to 3. Minimum value is
1.
                    description: Pod liveness check.
                  readinessProbe:
                    type: object
                    properties:
                      initialDelaySeconds:
                        type: integer
                        minimum: 0
                        description: The initial delay before first the health i
s first checked. Default to 15 seconds. Minimum value is 0.
                      timeoutSeconds:
                        type: integer
                        minimum: 1
                        description: The timeout for each attempted health check
. Default to 5 seconds. Minimum value is 1.
                      periodSeconds:
                        type: integer
                        minimum: 1
                        description: How often (in seconds) to perform the probe
. Default to 10 seconds. Minimum value is 1.
                      successThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive successes for the probe
 to be considered successful after having failed. Defaults to 1. Must be 1 for l
iveness. Minimum value is 1.
                      failureThreshold:
                        type: integer
                        minimum: 1
                        description: Minimum consecutive failures for the probe
to be considered failed after having succeeded. Defaults to 3. Minimum value is
1.
                    description: Pod readiness check.
                  enableSaramaLogging:
                    type: boolean
                    description: "Enable Sarama logging, a Go client library use
d by the Kafka Exporter."
                  showAllOffsets:
                    type: boolean
                    description: "Whether show the offset/lag for all consumer g
roup, otherwise, only show connected consumer groups."
                  template:
                    type: object
                    properties:
                      deployment:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                          deploymentStrategy:
                            type: string
                            enum:
                            - RollingUpdate
                            - Recreate
                            description: Pod replacement strategy for deployment
 configuration changes. Valid values are `RollingUpdate` and `Recreate`. Default
s to `RollingUpdate`.
                        description: Template for Kafka Exporter `Deployment`.
                      pod:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                          imagePullSecrets:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                            description: "List of references to secrets in the s
ame namespace to use for pulling any of the images used by this Pod. When the `S
TRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `ima
gePullSecrets` option are specified, only the `imagePullSecrets` variable is use
d and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored."
                          securityContext:
                            type: object
                            properties:
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              fsGroup:
                                type: integer
                              fsGroupChangePolicy:
                                type: string
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxChangePolicy:
                                type: string
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              supplementalGroups:
                                type: array
                                items:
                                  type: integer
                              supplementalGroupsPolicy:
                                type: string
                              sysctls:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Configures pod-level security attribute
s and common container settings.
                          terminationGracePeriodSeconds:
                            type: integer
                            minimum: 0
                            description: "The grace period is the duration in se
conds after the processes running in the pod are sent a termination signal, and
the time when the processes are forcibly halted with a kill signal. Set this val
ue to longer than the expected cleanup time for your process. Value must be a no
n-negative integer. A zero value indicates delete immediately. You might need to
 increase the grace period for very large Kafka clusters, so that the Kafka brok
ers have enough time to transfer their work to another broker before they are te
rminated. Defaults to 30 seconds."
                          affinity:
                            type: object
                            properties:
                              nodeAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecutio
n:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        preference:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution
:
                                    type: object
                                    properties:
                                      nodeSelectorTerms:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchFields:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                              podAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecutio
n:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution
:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                              podAntiAffinity:
                                type: object
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecutio
n:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        podAffinityTerm:
                                          type: object
                                          properties:
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            matchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            mismatchLabelKeys:
                                              type: array
                                              items:
                                                type: string
                                            namespaceSelector:
                                              type: object
                                              properties:
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      key:
                                                        type: string
                                                      operator:
                                                        type: string
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                            topologyKey:
                                              type: string
                                        weight:
                                          type: integer
                                  requiredDuringSchedulingIgnoredDuringExecution
:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        matchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        mismatchLabelKeys:
                                          type: array
                                          items:
                                            type: string
                                        namespaceSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                            description: The pod's affinity rules.
                          tolerations:
                            type: array
                            items:
                              type: object
                              properties:
                                effect:
                                  type: string
                                key:
                                  type: string
                                operator:
                                  type: string
                                tolerationSeconds:
                                  type: integer
                                value:
                                  type: string
                            description: The pod's tolerations.
                          topologySpreadConstraints:
                            type: array
                            items:
                              type: object
                              properties:
                                labelSelector:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                matchLabelKeys:
                                  type: array
                                  items:
                                    type: string
                                maxSkew:
                                  type: integer
                                minDomains:
                                  type: integer
                                nodeAffinityPolicy:
                                  type: string
                                nodeTaintsPolicy:
                                  type: string
                                topologyKey:
                                  type: string
                                whenUnsatisfiable:
                                  type: string
                            description: The pod's topology spread constraints.
                          priorityClassName:
                            type: string
                            description: 'The name of the priority class used to
 assign priority to the pods. '
                          schedulerName:
                            type: string
                            description: "The name of the scheduler used to disp
atch this `Pod`. If not specified, the default scheduler will be used."
                          hostAliases:
                            type: array
                            items:
                              type: object
                              properties:
                                hostnames:
                                  type: array
                                  items:
                                    type: string
                                ip:
                                  type: string
                            description: The pod's HostAliases. HostAliases is a
n optional list of hosts and IPs that will be injected into the Pod's hosts file
 if specified.
                          dnsPolicy:
                            type: string
                            enum:
                            - ClusterFirst
                            - ClusterFirstWithHostNet
                            - Default
                            - None
                            description: "The pod's DNSPolicy. Defaults to `Clus
terFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default`
 or `None`."
                          dnsConfig:
                            type: object
                            properties:
                              nameservers:
                                type: array
                                items:
                                  type: string
                              options:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                              searches:
                                type: array
                                items:
                                  type: string
                            description: "The pod's DNSConfig. If specified, it
will be merged to the generated DNS configuration based on the DNSPolicy."
                          enableServiceLinks:
                            type: boolean
                            description: Indicates whether information about ser
vices should be injected into Pod's environment variables.
                          tmpDirSizeLimit:
                            type: string
                            pattern: "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                            description: "Defines the total amount of pod memory
 allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in
 memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. T
he `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a h
igh value as it consumes pod memory resources."
                          volumes:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Name to use for the volume. Requi
red.
                                secret:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    optional:
                                      type: boolean
                                    secretName:
                                      type: string
                                  description: '`Secret` to use to populate the
volume.'
                                configMap:
                                  type: object
                                  properties:
                                    defaultMode:
                                      type: integer
                                    items:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          mode:
                                            type: integer
                                          path:
                                            type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  description: '`ConfigMap` to use to populate t
he volume.'
                                emptyDir:
                                  type: object
                                  properties:
                                    medium:
                                      type: string
                                    sizeLimit:
                                      type: object
                                      properties:
                                        amount:
                                          type: string
                                        format:
                                          type: string
                                  description: '`EmptyDir` to use to populate th
e volume.'
                                persistentVolumeClaim:
                                  type: object
                                  properties:
                                    claimName:
                                      type: string
                                    readOnly:
                                      type: boolean
                                  description: '`PersistentVolumeClaim` object t
o use to populate the volume.'
                                csi:
                                  type: object
                                  properties:
                                    driver:
                                      type: string
                                    fsType:
                                      type: string
                                    nodePublishSecretRef:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                    readOnly:
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  description: '`CSIVolumeSource` object to use
to populate the volume.'
                                image:
                                  type: object
                                  properties:
                                    pullPolicy:
                                      type: string
                                    reference:
                                      type: string
                                  description: '`ImageVolumeSource` object to us
e to populate the volume.'
                              oneOf:
                              - properties:
                                  secret: {}
                                  configMap: {}
                                  emptyDir: {}
                                  persistentVolumeClaim: {}
                                  csi: {}
                                  image: {}
                            description: Additional volumes that can be mounted
to the pod.
                        description: Template for Kafka Exporter `Pods`.
                      service:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                        description: Template for Kafka Exporter `Service`.
                      container:
                        type: object
                        properties:
                          env:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The environment variable key.
                                value:
                                  type: string
                                  description: The environment variable value.
                                valueFrom:
                                  type: object
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a secre
t.
                                    configMapKeyRef:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      description: Reference to a key in a confi
g map.
                                  oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                    - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                    - configMapKeyRef
                                  description: Reference to the secret or config
 map property to which the environment variable is set.
                              oneOf:
                              - properties:
                                  value: {}
                                required:
                                - value
                              - properties:
                                  valueFrom: {}
                                required:
                                - valueFrom
                            description: Environment variables which should be a
pplied to the container.
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              appArmorProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                            description: Security context for the container.
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                recursiveReadOnly:
                                  type: string
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                            description: Additional volume mounts which should b
e applied to the container.
                        description: Template for the Kafka Exporter container.
                      serviceAccount:
                        type: object
                        properties:
                          metadata:
                            type: object
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Labels added to the Kubernetes reso
urce.
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                                description: Annotations added to the Kubernetes
 resource.
                            description: Metadata applied to the resource.
                        description: Template for the Kafka Exporter service acc
ount.
                    description: Customization of deployment templates and pods.
                description: "Configuration of the Kafka Exporter. Kafka Exporte
r can provide additional metrics, for example lag of consumer group at topic/par
tition."
              maintenanceTimeWindows:
                type: array
                items:
                  type: string
                description: "A list of time windows for maintenance tasks (that
 is, certificates renewal). Each time window is defined by a cron expression."
            required:
            - kafka
            description: The specification of the Kafka cluster.
          status:
            type: object
            properties:
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: "The unique identifier of a condition, used t
o distinguish between other conditions in the resource."
                    status:
                      type: string
                      description: "The status of the condition, either True, Fa
lse or Unknown."
                    lastTransitionTime:
                      type: string
                      description: "Last time the condition of a type changed fr
om one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the
UTC time zone."
                    reason:
                      type: string
                      description: The reason for the condition's last transitio
n (a single word in CamelCase).
                    message:
                      type: string
                      description: Human-readable message indicating details abo
ut the condition's last transition.
                description: List of status conditions.
              observedGeneration:
                type: integer
                description: The generation of the CRD that was last reconciled
by the operator.
              listeners:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: The name of the listener.
                    name:
                      type: string
                      description: The name of the listener.
                    addresses:
                      type: array
                      items:
                        type: object
                        properties:
                          host:
                            type: string
                            description: The DNS name or IP address of the Kafka
 bootstrap service.
                          port:
                            type: integer
                            description: The port of the Kafka bootstrap service
.
                      description: A list of the addresses for this listener.
                    bootstrapServers:
                      type: string
                      description: A comma-separated list of `host:port` pairs f
or connecting to the Kafka cluster using this listener.
                    certificates:
                      type: array
                      items:
                        type: string
                      description: A list of TLS certificates which can be used
to verify the identity of the server when connecting to the given listener. Set
only for `tls` and `external` listeners.
                description: Addresses of the internal and external listeners.
              kafkaNodePools:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the KafkaNodePool used by this Ka
fka resource.
                description: List of the KafkaNodePools used by this Kafka clust
er.
              registeredNodeIds:
                type: array
                items:
                  type: integer
                description: Registered node IDs used by this Kafka cluster. Thi
s field is used for internal purposes only and will be removed in the future.
              clusterId:
                type: string
                description: Kafka cluster Id.
              operatorLastSuccessfulVersion:
                type: string
                description: The version of the Strimzi Cluster Operator which p
erformed the last successful reconciliation.
              kafkaVersion:
                type: string
                description: The version of Kafka currently deployed in the clus
ter.
              kafkaMetadataVersion:
                type: string
                description: The KRaft metadata.version currently used by the Ka
fka cluster.
              kafkaMetadataState:
                type: string
                enum:
                - ZooKeeper
                - KRaftMigration
                - KRaftDualWriting
                - KRaftPostMigration
                - PreKRaft
                - KRaft
                description: "Defines where cluster metadata are stored. Since K
afka KRaft has been fully adopted, the only applicable value is `KRaft`."
              autoRebalance:
                type: object
                properties:
                  state:
                    type: string
                    enum:
                    - Idle
                    - RebalanceOnScaleDown
                    - RebalanceOnScaleUp
                    description: "The current state of an auto-rebalancing opera
tion. Possible values are: \n\n* `Idle` as the initial state when an auto-rebala
ncing is requested or as final state when it completes or fails.\n* `RebalanceOn
ScaleDown` if an auto-rebalance related to a scale-down operation is running.\n*
 `RebalanceOnScaleUp` if an auto-rebalance related to a scale-up operation is ru
nning."
                  lastTransitionTime:
                    type: string
                    description: The timestamp of the latest auto-rebalancing st
ate update.
                  modes:
                    type: array
                    items:
                      type: object
                      properties:
                        mode:
                          type: string
                          enum:
                          - add-brokers
                          - remove-brokers
                          description: "Mode for which there is an auto-rebalanc
ing operation in progress or queued, when brokers are added or removed. The poss
ible modes are `add-brokers` and `remove-brokers`."
                        brokers:
                          type: array
                          items:
                            type: integer
                          description: "List of broker IDs involved in an auto-r
ebalancing operation related to the current mode. \nThe list contains one of the
 following: \n\n* Broker IDs for a current auto-rebalance. \n* Broker IDs for a
queued auto-rebalance (if a previous auto-rebalance is still in progress). \n"
                    description: "List of modes where an auto-rebalancing operat
ion is either running or queued. \nEach mode entry (`add-brokers` or `remove-bro
kers`) includes one of the following: \n\n* Broker IDs for a current auto-rebala
nce. \n* Broker IDs for a queued auto-rebalance (if a previous rebalance is stil
l in progress)."
                description: The status of an auto-rebalancing triggered by a cl
uster scaling request.
            description: The status of the Kafka cluster.
