name: Ingestion Service - Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build ./ingestion-service-py --file ./ingestion-service-py/Dockerfile --tag ingestion-service-py:latest

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ingestion-service-py/requirements.txt
    - name: Run tests
      run: python -m pytest ingestion-service-py/test_main.py

  e2e-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up KinD cluster
      uses: helm/kind-action@v1.2.0
    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests kafka-python
    - name: Run e2e test
      run: |
        # Install helm
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh
        # Deploy Kafka
        helm install kafka ./deploy/kafka -n default
        # Wait for Kafka to be ready
        kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=kafka -n default --timeout=300s
        # Deploy the ingestion service
        helm install ingestion-py ./deploy/ingestion-service-py/helm -n default \
          --set kafka.host=kafka-kafka-bootstrap \
          --set kafka.port=9092
        # Wait for the ingestion service to be ready
        kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=ingestion-service-py -n default --timeout=300s
        # Get all resources in the cluster
        kubectl get all -n default
        # Describe pods
        kubectl describe pods -n default
        # Port forward the ingestion service and Kafka
        kubectl port-forward svc/ingestion-py-ingestion-service-py-helm 8080:80 &
        kubectl port-forward svc/kafka-kafka-bootstrap 9092:9092 &
        # Run the e2e test script
        INGESTION_SERVICE_HOST=localhost INGESTION_SERVICE_PORT=8080 KAFKA_HOST=localhost KAFKA_PORT=9092 python scripts/e2e_test.py
